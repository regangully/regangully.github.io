{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"14.86292\",\n    y: \"82.74517\",\n    width: \"226.27417\",\n    height: \"90.50967\",\n    rx: \"45.25479\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"24\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"160.06933\",\n    y1: \"104.06932\",\n    x2: \"176.48528\",\n    y2: \"88.48528\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M112,208A45.25478,45.25478,0,0,1,48,208L48,208A45.25478,45.25478,0,0,1,48,144L96,96l64,64Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"14.86292\",\n    y: \"82.74517\",\n    width: \"226.27417\",\n    height: \"90.50967\",\n    rx: \"45.25479\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"160.06933\",\n    y1: \"112.06932\",\n    x2: \"184.48528\",\n    y2: \"88.48528\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M213.65723,42.34326a53.25535,53.25535,0,0,0-75.31446,0l-96,96a53.255,53.255,0,0,0,75.31446,75.31348l96-96A53.31558,53.31558,0,0,0,213.65723,42.34326Zm-11.31446,64L160,148.68628,107.31348,96l42.34375-42.34326a37.25465,37.25465,0,0,1,52.68554,52.68652Zm-12.10351-23.416a7.99946,7.99946,0,0,1-.19629,11.312l-24.416,23.584a7.99966,7.99966,0,1,1-11.11523-11.50781l24.416-23.584A7.99843,7.99843,0,0,1,190.23926,82.92725Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"14.86292\",\n    y: \"82.74517\",\n    width: \"226.27417\",\n    height: \"90.50967\",\n    rx: \"45.25479\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"12\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"160.06933\",\n    y1: \"112.06932\",\n    x2: \"184.48528\",\n    y2: \"88.48528\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"14.86292\",\n    y: \"82.74517\",\n    width: \"226.27417\",\n    height: \"90.50967\",\n    rx: \"45.25479\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"8\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"160.06933\",\n    y1: \"112.06932\",\n    x2: \"184.48528\",\n    y2: \"88.48528\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"14.86292\",\n    y: \"82.74517\",\n    width: \"226.27417\",\n    height: \"90.50967\",\n    rx: \"45.25479\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"96\",\n    y1: \"96\",\n    x2: \"160\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"160.06933\",\n    y1: \"112.06932\",\n    x2: \"184.48528\",\n    y2: \"88.48528\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Pill = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nPill.displayName = \"Pill\";\nexport default Pill;","map":{"version":3,"sources":["../../src/icons/Pill.tsx"],"names":["pathsByWeight","x","y","width","height","rx","transform","strokeWidth","stroke","color","strokeLinecap","strokeLinejoin","fill","x1","y1","x2","y2","d","opacity","renderPath","renderPathForWeight","Pill","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"14.86292\"\n      y=\"82.74517\"\n      width=\"226.27417\"\n      height=\"90.50967\"\n      rx=\"45.25479\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"160.06933\"\n      y1=\"104.06932\"\n      x2=\"176.48528\"\n      y2=\"88.48528\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M112,208A45.25478,45.25478,0,0,1,48,208L48,208A45.25478,45.25478,0,0,1,48,144L96,96l64,64Z\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"14.86292\"\n      y=\"82.74517\"\n      width=\"226.27417\"\n      height=\"90.50967\"\n      rx=\"45.25479\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160.06933\"\n      y1=\"112.06932\"\n      x2=\"184.48528\"\n      y2=\"88.48528\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M213.65723,42.34326a53.25535,53.25535,0,0,0-75.31446,0l-96,96a53.255,53.255,0,0,0,75.31446,75.31348l96-96A53.31558,53.31558,0,0,0,213.65723,42.34326Zm-11.31446,64L160,148.68628,107.31348,96l42.34375-42.34326a37.25465,37.25465,0,0,1,52.68554,52.68652Zm-12.10351-23.416a7.99946,7.99946,0,0,1-.19629,11.312l-24.416,23.584a7.99966,7.99966,0,1,1-11.11523-11.50781l24.416-23.584A7.99843,7.99843,0,0,1,190.23926,82.92725Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"14.86292\"\n      y=\"82.74517\"\n      width=\"226.27417\"\n      height=\"90.50967\"\n      rx=\"45.25479\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"160.06933\"\n      y1=\"112.06932\"\n      x2=\"184.48528\"\n      y2=\"88.48528\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"14.86292\"\n      y=\"82.74517\"\n      width=\"226.27417\"\n      height=\"90.50967\"\n      rx=\"45.25479\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"160.06933\"\n      y1=\"112.06932\"\n      x2=\"184.48528\"\n      y2=\"88.48528\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"14.86292\"\n      y=\"82.74517\"\n      width=\"226.27417\"\n      height=\"90.50967\"\n      rx=\"45.25479\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160.06933\"\n      y1=\"112.06932\"\n      x2=\"184.48528\"\n      y2=\"88.48528\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Pill = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPill.displayName = \"Pill\";\n\nexport default Pill;\n"]},"metadata":{},"sourceType":"module"}