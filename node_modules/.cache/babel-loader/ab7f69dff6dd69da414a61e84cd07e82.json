{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"124\",\n    cy: \"116\",\n    r: \"24\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M204,216c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"107.02944\",\n    y1: \"99.02944\",\n    x2: \"37.85786\",\n    y2: \"29.86372\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"124\",\n    cy: \"116.00586\",\n    r: \"20\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"124\",\n    cy: \"116.00586\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"109.85786\",\n    y1: \"101.86372\",\n    x2: \"37.85786\",\n    y2: \"29.86372\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M256,204a28,28,0,0,1-56,0c0-23.042,21.42969-44.74365,22.34277-45.65625a7.99945,7.99945,0,0,1,11.31446,0C234.57031,159.25635,256,180.958,256,204ZM132.48535,124.49121a12.0001,12.0001,0,1,0-16.9707.00049A12.01451,12.01451,0,0,0,132.48535,124.49121Zm98.47949-1.00684a8.00033,8.00033,0,0,0-2.34277-5.65673L121.1377,10.34326a8.00122,8.00122,0,0,0-11.31446,0L69.73682,50.4292l40.949,40.949a27.99954,27.99954,0,1,1-11.31421,11.31372L58.42285,61.74316l-44.7666,44.76661a24.029,24.029,0,0,0,0,33.94091l84.85742,84.85694a23.99952,23.99952,0,0,0,33.94141,0l96.167-96.16651A8.00034,8.00034,0,0,0,230.96484,123.48437ZM43.51465,24.207A8.00018,8.00018,0,0,0,32.2002,35.52051L58.42285,61.74316l11.314-11.314Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"124\",\n    cy: \"116.00586\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"109.85786\",\n    y1: \"101.86372\",\n    x2: \"37.85786\",\n    y2: \"29.86372\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"124\",\n    cy: \"116.00586\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"109.85786\",\n    y1: \"101.86372\",\n    x2: \"37.85786\",\n    y2: \"29.86372\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"124\",\n    cy: \"116.00586\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"109.85786\",\n    y1: \"101.86372\",\n    x2: \"37.85786\",\n    y2: \"29.86372\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar PaintBucket = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nPaintBucket.displayName = \"PaintBucket\";\nexport default PaintBucket;","map":{"version":3,"sources":["../../src/icons/PaintBucket.tsx"],"names":["pathsByWeight","d","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","x1","y1","x2","y2","opacity","renderPath","renderPathForWeight","PaintBucket","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle\n      cx=\"124\"\n      cy=\"116\"\n      r=\"24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M204,216c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"107.02944\"\n      y1=\"99.02944\"\n      x2=\"37.85786\"\n      y2=\"29.86372\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"124\" cy=\"116.00586\" r=\"20\" opacity=\"0.2\" />\n    <path\n      d=\"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"124\"\n      cy=\"116.00586\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"109.85786\"\n      y1=\"101.86372\"\n      x2=\"37.85786\"\n      y2=\"29.86372\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M256,204a28,28,0,0,1-56,0c0-23.042,21.42969-44.74365,22.34277-45.65625a7.99945,7.99945,0,0,1,11.31446,0C234.57031,159.25635,256,180.958,256,204ZM132.48535,124.49121a12.0001,12.0001,0,1,0-16.9707.00049A12.01451,12.01451,0,0,0,132.48535,124.49121Zm98.47949-1.00684a8.00033,8.00033,0,0,0-2.34277-5.65673L121.1377,10.34326a8.00122,8.00122,0,0,0-11.31446,0L69.73682,50.4292l40.949,40.949a27.99954,27.99954,0,1,1-11.31421,11.31372L58.42285,61.74316l-44.7666,44.76661a24.029,24.029,0,0,0,0,33.94091l84.85742,84.85694a23.99952,23.99952,0,0,0,33.94141,0l96.167-96.16651A8.00034,8.00034,0,0,0,230.96484,123.48437ZM43.51465,24.207A8.00018,8.00018,0,0,0,32.2002,35.52051L58.42285,61.74316l11.314-11.314Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle\n      cx=\"124\"\n      cy=\"116.00586\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"109.85786\"\n      y1=\"101.86372\"\n      x2=\"37.85786\"\n      y2=\"29.86372\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle\n      cx=\"124\"\n      cy=\"116.00586\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"109.85786\"\n      y1=\"101.86372\"\n      x2=\"37.85786\"\n      y2=\"29.86372\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M222.9646,123.48437,126.79808,219.6509a16,16,0,0,1-22.62741,0l-84.857-84.857a16,16,0,0,1,0-22.62742L115.48023,16Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"124\"\n      cy=\"116.00586\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M208,204c0-19.99414,20-40,20-40s20,20.00586,20,40a20,20,0,0,1-40,0Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"109.85786\"\n      y1=\"101.86372\"\n      x2=\"37.85786\"\n      y2=\"29.86372\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst PaintBucket = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPaintBucket.displayName = \"PaintBucket\";\n\nexport default PaintBucket;\n"]},"metadata":{},"sourceType":"module"}