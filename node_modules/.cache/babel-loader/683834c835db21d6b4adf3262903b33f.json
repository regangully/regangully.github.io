{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"32\",\n    x2: \"84\",\n    y2: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"116\",\n    x2: \"84\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M120,32V80a36,36,0,0,1-72,0V32\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M204,160H148S160,48,204,32V224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M204,160H148S160,48,204,32\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"32\",\n    x2: \"84\",\n    y2: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"116\",\n    x2: \"84\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M112,32l8,48a36,36,0,0,1-72,0l8-48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M204,160H148S160,48,204,32V224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n    d: \"M127.98877,79.77539c-.00439-.14453-.00977-.28906-.022-.43457-.01221-.146-.03028-.29-.04981-.43359-.01074-.07422-.01367-.14795-.02588-.22266l-8-48a8,8,0,1,0-15.78222,2.63086L110.55615,72H92V32a8,8,0,0,0-16,0V72H57.44385l6.44726-38.68457a8,8,0,1,0-15.78222-2.63086l-8,48c-.01221.07471-.01514.14844-.02588.22266-.01953.14355-.0376.28759-.04981.43359-.0122.14551-.01758.29-.022.43457C40.00928,79.85059,40,79.92432,40,80c0,.07129.00488.14111.00537.21191.00147.04932.00147.09815.00391.147A44.06056,44.06056,0,0,0,76,123.25781V224a8,8,0,0,0,16,0V123.25781a44.06056,44.06056,0,0,0,35.99072-42.89892c.00244-.04883.00244-.09766.00391-.147C127.99512,80.14111,128,80.07129,128,80,128,79.92432,127.99072,79.85059,127.98877,79.77539Z\"\n  }), React.createElement(\"path\", {\n    d: \"M211.99268,31.8584c-.00245-.165-.01172-.33008-.02491-.49561-.00879-.1123-.019-.22363-.03271-.33447-.01709-.13818-.03858-.27637-.063-.41455-.02441-.13916-.05127-.27686-.08252-.41309-.02539-.10839-.05371-.2163-.0835-.32422-.04443-.16064-.09228-.31884-.14648-.47509-.01514-.04492-.0249-.09033-.041-.13526-.01806-.04834-.041-.09326-.05957-.14111q-.09081-.23511-.19531-.46191-.06738-.148-.14062-.292-.09888-.19335-.208-.38037c-.06445-.11181-.13037-.22168-.19971-.32959-.06592-.10156-.13476-.20019-.20508-.29883-.08447-.11914-.17041-.23584-.26123-.34912-.0664-.08349-.13574-.16406-.20507-.24463-.1001-.11523-.20166-.229-.30762-.33789-.07422-.07617-.15137-.14941-.22852-.22265-.10644-.10156-.21386-.20117-.32568-.29639-.08984-.07666-.18311-.14892-.27637-.22168-.10449-.08105-.20947-.16162-.31787-.23779-.11084-.07764-.2251-.15039-.33984-.22217-.09717-.061-.19434-.12256-.29444-.1792-.13037-.07422-.26367-.14258-.39843-.20947-.09229-.0459-.18409-.0918-.27832-.13428-.14161-.06348-.28565-.12109-.43165-.17676-.09667-.03662-.19287-.07324-.2915-.10644-.13965-.04737-.28174-.08887-.4248-.12842-.11426-.03174-.228-.06152-.34327-.08838-.12695-.02881-.25537-.05371-.38427-.07666-.14063-.02539-.28076-.04687-.42285-.06445-.10889-.01319-.21827-.02393-.32862-.03321q-.24535-.01977-.49365-.0249C204.10352,24.00684,204.05273,24,204,24c-.04834,0-.0957.00635-.14355.00732-.16407.00293-.32813.01172-.49268.02491-.11279.00879-.22461.019-.33594.03271-.13818.01709-.27588.03858-.41406.063-.13916.02441-.27686.05127-.41309.083-.10839.0249-.2163.05322-.32422.083-.16064.04394-.31884.09228-.47509.14648-.04492.01514-.09033.0249-.13526.041-.09863.03613-.1958.0791-.29394.11572-.03711.01513-.0752.02832-.11231.04394-20.60986,7.74561-37.11474,33.0293-49.05713,75.17823a398.22183,398.22183,0,0,0-11.75683,59.32812A8.00051,8.00051,0,0,0,148,168h48v56a8,8,0,0,0,16,0V32C212,31.95215,211.99365,31.90625,211.99268,31.8584Z\"\n  })));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"32\",\n    x2: \"84\",\n    y2: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"116\",\n    x2: \"84\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M112,32l8,48a36,36,0,0,1-72,0l8-48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M204,160H148S160,48,204,32V224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"32\",\n    x2: \"84\",\n    y2: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"116\",\n    x2: \"84\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M112,32l8,48a36,36,0,0,1-72,0l8-48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M204,160H148S160,48,204,32V224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"32\",\n    x2: \"84\",\n    y2: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"116\",\n    x2: \"84\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M112,32l8,48a36,36,0,0,1-72,0l8-48\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M204,160H148S160,48,204,32V224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar ForkKnife = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nForkKnife.displayName = \"ForkKnife\";\nexport default ForkKnife;","map":{"version":3,"sources":["../../src/icons/ForkKnife.tsx"],"names":["pathsByWeight","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","d","opacity","renderPath","renderPathForWeight","ForkKnife","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"84\"\n      y1=\"32\"\n      x2=\"84\"\n      y2=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"116\"\n      x2=\"84\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M120,32V80a36,36,0,0,1-72,0V32\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M204,160H148S160,48,204,32V224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path d=\"M204,160H148S160,48,204,32\" opacity=\"0.2\" />\n    <line\n      x1=\"84\"\n      y1=\"32\"\n      x2=\"84\"\n      y2=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"116\"\n      x2=\"84\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M112,32l8,48a36,36,0,0,1-72,0l8-48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M204,160H148S160,48,204,32V224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g>\n      <path d=\"M127.98877,79.77539c-.00439-.14453-.00977-.28906-.022-.43457-.01221-.146-.03028-.29-.04981-.43359-.01074-.07422-.01367-.14795-.02588-.22266l-8-48a8,8,0,1,0-15.78222,2.63086L110.55615,72H92V32a8,8,0,0,0-16,0V72H57.44385l6.44726-38.68457a8,8,0,1,0-15.78222-2.63086l-8,48c-.01221.07471-.01514.14844-.02588.22266-.01953.14355-.0376.28759-.04981.43359-.0122.14551-.01758.29-.022.43457C40.00928,79.85059,40,79.92432,40,80c0,.07129.00488.14111.00537.21191.00147.04932.00147.09815.00391.147A44.06056,44.06056,0,0,0,76,123.25781V224a8,8,0,0,0,16,0V123.25781a44.06056,44.06056,0,0,0,35.99072-42.89892c.00244-.04883.00244-.09766.00391-.147C127.99512,80.14111,128,80.07129,128,80,128,79.92432,127.99072,79.85059,127.98877,79.77539Z\" />\n      <path d=\"M211.99268,31.8584c-.00245-.165-.01172-.33008-.02491-.49561-.00879-.1123-.019-.22363-.03271-.33447-.01709-.13818-.03858-.27637-.063-.41455-.02441-.13916-.05127-.27686-.08252-.41309-.02539-.10839-.05371-.2163-.0835-.32422-.04443-.16064-.09228-.31884-.14648-.47509-.01514-.04492-.0249-.09033-.041-.13526-.01806-.04834-.041-.09326-.05957-.14111q-.09081-.23511-.19531-.46191-.06738-.148-.14062-.292-.09888-.19335-.208-.38037c-.06445-.11181-.13037-.22168-.19971-.32959-.06592-.10156-.13476-.20019-.20508-.29883-.08447-.11914-.17041-.23584-.26123-.34912-.0664-.08349-.13574-.16406-.20507-.24463-.1001-.11523-.20166-.229-.30762-.33789-.07422-.07617-.15137-.14941-.22852-.22265-.10644-.10156-.21386-.20117-.32568-.29639-.08984-.07666-.18311-.14892-.27637-.22168-.10449-.08105-.20947-.16162-.31787-.23779-.11084-.07764-.2251-.15039-.33984-.22217-.09717-.061-.19434-.12256-.29444-.1792-.13037-.07422-.26367-.14258-.39843-.20947-.09229-.0459-.18409-.0918-.27832-.13428-.14161-.06348-.28565-.12109-.43165-.17676-.09667-.03662-.19287-.07324-.2915-.10644-.13965-.04737-.28174-.08887-.4248-.12842-.11426-.03174-.228-.06152-.34327-.08838-.12695-.02881-.25537-.05371-.38427-.07666-.14063-.02539-.28076-.04687-.42285-.06445-.10889-.01319-.21827-.02393-.32862-.03321q-.24535-.01977-.49365-.0249C204.10352,24.00684,204.05273,24,204,24c-.04834,0-.0957.00635-.14355.00732-.16407.00293-.32813.01172-.49268.02491-.11279.00879-.22461.019-.33594.03271-.13818.01709-.27588.03858-.41406.063-.13916.02441-.27686.05127-.41309.083-.10839.0249-.2163.05322-.32422.083-.16064.04394-.31884.09228-.47509.14648-.04492.01514-.09033.0249-.13526.041-.09863.03613-.1958.0791-.29394.11572-.03711.01513-.0752.02832-.11231.04394-20.60986,7.74561-37.11474,33.0293-49.05713,75.17823a398.22183,398.22183,0,0,0-11.75683,59.32812A8.00051,8.00051,0,0,0,148,168h48v56a8,8,0,0,0,16,0V32C212,31.95215,211.99365,31.90625,211.99268,31.8584Z\" />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"84\"\n      y1=\"32\"\n      x2=\"84\"\n      y2=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"116\"\n      x2=\"84\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M112,32l8,48a36,36,0,0,1-72,0l8-48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M204,160H148S160,48,204,32V224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"84\"\n      y1=\"32\"\n      x2=\"84\"\n      y2=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"116\"\n      x2=\"84\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M112,32l8,48a36,36,0,0,1-72,0l8-48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M204,160H148S160,48,204,32V224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"84\"\n      y1=\"32\"\n      x2=\"84\"\n      y2=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"116\"\n      x2=\"84\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M112,32l8,48a36,36,0,0,1-72,0l8-48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M204,160H148S160,48,204,32V224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst ForkKnife = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nForkKnife.displayName = \"ForkKnife\";\n\nexport default ForkKnife;\n"]},"metadata":{},"sourceType":"module"}