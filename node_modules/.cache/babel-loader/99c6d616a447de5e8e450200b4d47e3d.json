{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n    d: \"M236.71765,121.78477,212,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,236.71765,121.78477Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M44,133.0718,19.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,51.0307,59.30511L76,71.78976Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M212,134.14359l-12,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L44,133.0718\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H180\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M76.57437,71.78976l47.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M108,220.86156,77.86056,213.3267a7.99993,7.99993,0,0,1-3.308-1.7233L52,192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  })));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M200,152.86156,163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718l32.57437-61.282,51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156H143.31371a8,8,0,0,0-5.65686,2.34315L98.52241,114.33915a8,8,0,0,0,.85685,12.05686L104.8,130.46156a32,32,0,0,0,38.4,0l12.8-9.6Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M119.76074,214.80176a7.98886,7.98886,0,0,1-9.70117,5.82031l-30.13965-7.53418a16.0992,16.0992,0,0,1-6.61719-3.44727L50.752,190.03809a8,8,0,0,1,10.4961-12.07618l22.55273,19.60352,30.13965,7.53516A7.99856,7.99856,0,0,1,119.76074,214.80176Zm132.60156-95.2461a15.88206,15.88206,0,0,1-8.0664,9.38428L221.02783,140.574l-14.94678,17.48553c-.05224.061-.10937.11725-.16308.17664-.04932.05413-.09815.10785-.14844.16034-.03808.03985-.07324.08245-.1123.12152l-36.79688,36.79834a16.0981,16.0981,0,0,1-11.35058,4.67968,15.8477,15.8477,0,0,1-3.84473-.47265L95.708,185.03418a15.9025,15.9025,0,0,1-5.97559-2.918L35.7041,139.86829l-24-12.00013a16.0014,16.0014,0,0,1-7.02734-21.7163L29.26953,59.05469A16.07985,16.07985,0,0,1,50.6084,52.1499l22.375,11.18744L121.65527,49.148a16.01609,16.01609,0,0,1,11.07325.78271l32.99707,14.93067H182.1123l23.28028-11.63965A16.07317,16.07317,0,0,1,226.73047,60.127l24.59277,47.09619A15.87906,15.87906,0,0,1,252.3623,119.55566Zm-64.63916,34.26886-31.6499-23.01788L148,136.86133a40.20558,40.20558,0,0,1-48,0l-5.4209-4.06543a16.00034,16.00034,0,0,1-1.71387-24.11328L132,69.54785a16.1947,16.1947,0,0,1,1.8335-1.55548l-7.69971-3.48407L77.41016,78.71265,50.17432,130.872,99.58887,169.5127l57.957,14.48925Zm18.68311-20.76959-27.25439-52.1936h-15.1294l-.02734.002c-.0127,0-.02491-.00189-.03711-.002H143.31348l-39.13379,39.13476,5.41992,4.06543a24.1254,24.1254,0,0,0,28.80078,0l12.79981-9.60009a7.99783,7.99783,0,0,1,9.50488-.06983l38.019,27.65027Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Handshake = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nHandshake.displayName = \"Handshake\";\nexport default Handshake;","map":{"version":3,"sources":["../../src/icons/Handshake.tsx"],"names":["pathsByWeight","d","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","opacity","renderPath","renderPathForWeight","Handshake","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <g>\n      <path\n        d=\"M236.71765,121.78477,212,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,236.71765,121.78477Z\"\n        fill=\"none\"\n        stroke={color}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"24\"\n      />\n      <path\n        d=\"M44,133.0718,19.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,51.0307,59.30511L76,71.78976Z\"\n        fill=\"none\"\n        stroke={color}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"24\"\n      />\n      <path\n        d=\"M212,134.14359l-12,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L44,133.0718\"\n        fill=\"none\"\n        stroke={color}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"24\"\n      />\n      <path\n        d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H180\"\n        fill=\"none\"\n        stroke={color}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"24\"\n      />\n      <path\n        d=\"M76.57437,71.78976l47.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n        fill=\"none\"\n        stroke={color}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"24\"\n      />\n      <path\n        d=\"M108,220.86156,77.86056,213.3267a7.99993,7.99993,0,0,1-3.308-1.7233L52,192\"\n        fill=\"none\"\n        stroke={color}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"24\"\n      />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M200,152.86156,163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718l32.57437-61.282,51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156H143.31371a8,8,0,0,0-5.65686,2.34315L98.52241,114.33915a8,8,0,0,0,.85685,12.05686L104.8,130.46156a32,32,0,0,0,38.4,0l12.8-9.6Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M119.76074,214.80176a7.98886,7.98886,0,0,1-9.70117,5.82031l-30.13965-7.53418a16.0992,16.0992,0,0,1-6.61719-3.44727L50.752,190.03809a8,8,0,0,1,10.4961-12.07618l22.55273,19.60352,30.13965,7.53516A7.99856,7.99856,0,0,1,119.76074,214.80176Zm132.60156-95.2461a15.88206,15.88206,0,0,1-8.0664,9.38428L221.02783,140.574l-14.94678,17.48553c-.05224.061-.10937.11725-.16308.17664-.04932.05413-.09815.10785-.14844.16034-.03808.03985-.07324.08245-.1123.12152l-36.79688,36.79834a16.0981,16.0981,0,0,1-11.35058,4.67968,15.8477,15.8477,0,0,1-3.84473-.47265L95.708,185.03418a15.9025,15.9025,0,0,1-5.97559-2.918L35.7041,139.86829l-24-12.00013a16.0014,16.0014,0,0,1-7.02734-21.7163L29.26953,59.05469A16.07985,16.07985,0,0,1,50.6084,52.1499l22.375,11.18744L121.65527,49.148a16.01609,16.01609,0,0,1,11.07325.78271l32.99707,14.93067H182.1123l23.28028-11.63965A16.07317,16.07317,0,0,1,226.73047,60.127l24.59277,47.09619A15.87906,15.87906,0,0,1,252.3623,119.55566Zm-64.63916,34.26886-31.6499-23.01788L148,136.86133a40.20558,40.20558,0,0,1-48,0l-5.4209-4.06543a16.00034,16.00034,0,0,1-1.71387-24.11328L132,69.54785a16.1947,16.1947,0,0,1,1.8335-1.55548l-7.69971-3.48407L77.41016,78.71265,50.17432,130.872,99.58887,169.5127l57.957,14.48925Zm18.68311-20.76959-27.25439-52.1936h-15.1294l-.02734.002c-.0127,0-.02491-.00189-.03711-.002H143.31348l-39.13379,39.13476,5.41992,4.06543a24.1254,24.1254,0,0,0,28.80078,0l12.79981-9.60009a7.99783,7.99783,0,0,1,9.50488-.06983l38.019,27.65027Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Handshake = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nHandshake.displayName = \"Handshake\";\n\nexport default Handshake;\n"]},"metadata":{},"sourceType":"module"}