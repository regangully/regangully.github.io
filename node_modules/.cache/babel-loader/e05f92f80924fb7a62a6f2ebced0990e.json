{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"24\",\n    strokeWidth: \"24\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"rect\", {\n    x: \"68\",\n    y: \"144\",\n    width: \"120\",\n    height: \"36\",\n    rx: \"15.99998\",\n    strokeWidth: \"24\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"108\",\n    y1: \"144\",\n    x2: \"108\",\n    y2: \"180\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"144\",\n    x2: \"148\",\n    y2: \"180\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"56\",\n    x2: \"128\",\n    y2: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"104\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"104\",\n    r: \"16\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M200,56H56A23.99994,23.99994,0,0,0,32,80V192a23.99994,23.99994,0,0,0,24,24H200a23.99994,23.99994,0,0,0,24-24V80A23.99994,23.99994,0,0,0,200,56ZM164,184H92a20,20,0,0,1,0-40h72a20,20,0,0,1,0,40Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"24\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"rect\", {\n    x: \"72\",\n    y: \"144\",\n    width: \"112\",\n    height: \"40\",\n    rx: \"19.99998\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"144\",\n    x2: \"148\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"108\",\n    y1: \"144\",\n    x2: \"108\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"56\",\n    x2: \"128\",\n    y2: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"108\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"108\",\n    r: \"12\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M200,48H136V16a8,8,0,0,0-16,0V48H56A32.03635,32.03635,0,0,0,24,80V192a32.03635,32.03635,0,0,0,32,32H200a32.03635,32.03635,0,0,0,32-32V80A32.03635,32.03635,0,0,0,200,48ZM72,108a12,12,0,1,1,12,12A12,12,0,0,1,72,108Zm28,76H92a16,16,0,0,1,0-32h8Zm40,0H116V152h24Zm24,0h-8V152h8a16,16,0,0,1,0,32Zm8-64a12,12,0,1,1,12-12A12,12,0,0,1,172,120Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"24\",\n    strokeWidth: \"12\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"rect\", {\n    x: \"72\",\n    y: \"144\",\n    width: \"112\",\n    height: \"40\",\n    rx: \"19.99998\",\n    strokeWidth: \"12\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"144\",\n    x2: \"148\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"108\",\n    y1: \"144\",\n    x2: \"108\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"56\",\n    x2: \"128\",\n    y2: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"108\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"108\",\n    r: \"10\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"24\",\n    strokeWidth: \"8\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"rect\", {\n    x: \"72\",\n    y: \"144\",\n    width: \"112\",\n    height: \"40\",\n    rx: \"19.99998\",\n    strokeWidth: \"8\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"144\",\n    x2: \"148\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"108\",\n    y1: \"144\",\n    x2: \"108\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"56\",\n    x2: \"128\",\n    y2: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"108\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"108\",\n    r: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"24\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"rect\", {\n    x: \"72\",\n    y: \"144\",\n    width: \"112\",\n    height: \"40\",\n    rx: \"19.99998\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"line\", {\n    x1: \"148\",\n    y1: \"144\",\n    x2: \"148\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"108\",\n    y1: \"144\",\n    x2: \"108\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"56\",\n    x2: \"128\",\n    y2: \"16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"84\",\n    cy: \"108\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"172\",\n    cy: \"108\",\n    r: \"12\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Robot = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nRobot.displayName = \"Robot\";\nexport default Robot;","map":{"version":3,"sources":["../../src/icons/Robot.tsx"],"names":["pathsByWeight","x","y","width","height","rx","strokeWidth","stroke","color","strokeLinecap","strokeLinejoin","fill","x1","y1","x2","y2","cx","cy","r","d","opacity","renderPath","renderPathForWeight","Robot","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"24\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <rect\n      x=\"68\"\n      y=\"144\"\n      width=\"120\"\n      height=\"36\"\n      rx=\"15.99998\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"108\"\n      y1=\"144\"\n      x2=\"108\"\n      y2=\"180\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"148\"\n      y1=\"144\"\n      x2=\"148\"\n      y2=\"180\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"56\"\n      x2=\"128\"\n      y2=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"84\" cy=\"104\" r=\"16\" />\n    <circle cx=\"172\" cy=\"104\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M200,56H56A23.99994,23.99994,0,0,0,32,80V192a23.99994,23.99994,0,0,0,24,24H200a23.99994,23.99994,0,0,0,24-24V80A23.99994,23.99994,0,0,0,200,56ZM164,184H92a20,20,0,0,1,0-40h72a20,20,0,0,1,0,40Z\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"24\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <rect\n      x=\"72\"\n      y=\"144\"\n      width=\"112\"\n      height=\"40\"\n      rx=\"19.99998\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"148\"\n      y1=\"144\"\n      x2=\"148\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"108\"\n      y1=\"144\"\n      x2=\"108\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"56\"\n      x2=\"128\"\n      y2=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"84\" cy=\"108\" r=\"12\" />\n    <circle cx=\"172\" cy=\"108\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M200,48H136V16a8,8,0,0,0-16,0V48H56A32.03635,32.03635,0,0,0,24,80V192a32.03635,32.03635,0,0,0,32,32H200a32.03635,32.03635,0,0,0,32-32V80A32.03635,32.03635,0,0,0,200,48ZM72,108a12,12,0,1,1,12,12A12,12,0,0,1,72,108Zm28,76H92a16,16,0,0,1,0-32h8Zm40,0H116V152h24Zm24,0h-8V152h8a16,16,0,0,1,0,32Zm8-64a12,12,0,1,1,12-12A12,12,0,0,1,172,120Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"24\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <rect\n      x=\"72\"\n      y=\"144\"\n      width=\"112\"\n      height=\"40\"\n      rx=\"19.99998\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"148\"\n      y1=\"144\"\n      x2=\"148\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"108\"\n      y1=\"144\"\n      x2=\"108\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"56\"\n      x2=\"128\"\n      y2=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"84\" cy=\"108\" r=\"10\" />\n    <circle cx=\"172\" cy=\"108\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"24\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <rect\n      x=\"72\"\n      y=\"144\"\n      width=\"112\"\n      height=\"40\"\n      rx=\"19.99998\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"148\"\n      y1=\"144\"\n      x2=\"148\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"108\"\n      y1=\"144\"\n      x2=\"108\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"56\"\n      x2=\"128\"\n      y2=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"84\" cy=\"108\" r=\"8\" />\n    <circle cx=\"172\" cy=\"108\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"24\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <rect\n      x=\"72\"\n      y=\"144\"\n      width=\"112\"\n      height=\"40\"\n      rx=\"19.99998\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"148\"\n      y1=\"144\"\n      x2=\"148\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"108\"\n      y1=\"144\"\n      x2=\"108\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"56\"\n      x2=\"128\"\n      y2=\"16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"84\" cy=\"108\" r=\"12\" />\n    <circle cx=\"172\" cy=\"108\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Robot = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nRobot.displayName = \"Robot\";\n\nexport default Robot;\n"]},"metadata":{},"sourceType":"module"}