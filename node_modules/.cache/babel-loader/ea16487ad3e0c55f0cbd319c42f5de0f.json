{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"128\",\n    x2: \"216\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"64\",\n    r: \"20\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"192\",\n    r: \"20\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"128\",\n    x2: \"216\",\n    y2: \"128\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"64\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"192\",\n    r: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M224,128a8.00008,8.00008,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8.00008,8.00008,0,0,1,224,128ZM128,80a16,16,0,1,0-16-16A16.01833,16.01833,0,0,0,128,80Zm0,96a16,16,0,1,0,16,16A16.01833,16.01833,0,0,0,128,176Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"128\",\n    x2: \"216\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"64\",\n    r: \"14\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"192\",\n    r: \"14\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"128\",\n    x2: \"216\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"64\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"192\",\n    r: \"12\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"40\",\n    y1: \"128\",\n    x2: \"216\",\n    y2: \"128\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"64\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"192\",\n    r: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Divide = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nDivide.displayName = \"Divide\";\nexport default Divide;","map":{"version":3,"sources":["../../src/icons/Divide.tsx"],"names":["pathsByWeight","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","d","renderPath","renderPathForWeight","Divide","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"128\" cy=\"64\" r=\"20\" />\n    <circle cx=\"128\" cy=\"192\" r=\"20\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"128\" cy=\"64\" r=\"16\" />\n    <circle cx=\"128\" cy=\"192\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,128a8.00008,8.00008,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8.00008,8.00008,0,0,1,224,128ZM128,80a16,16,0,1,0-16-16A16.01833,16.01833,0,0,0,128,80Zm0,96a16,16,0,1,0,16,16A16.01833,16.01833,0,0,0,128,176Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"128\" cy=\"64\" r=\"14\" />\n    <circle cx=\"128\" cy=\"192\" r=\"14\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"128\" cy=\"64\" r=\"12\" />\n    <circle cx=\"128\" cy=\"192\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"128\" cy=\"64\" r=\"16\" />\n    <circle cx=\"128\" cy=\"192\" r=\"16\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Divide = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nDivide.displayName = \"Divide\";\n\nexport default Divide;\n"]},"metadata":{},"sourceType":"module"}