{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"128.002 160 176 216 80 216 128.002 160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M48,192a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M208,48H48A16.00016,16.00016,0,0,0,32,64V176a16.00016,16.00016,0,0,0,16,16h52.57227l27.43017-32,27.42725,32H208a16.00016,16.00016,0,0,0,16-16V64A16.00016,16.00016,0,0,0,208,48Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polygon\", {\n    points: \"128.002 160 176 216 80 216 128.002 160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M64,192H48a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16H192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n    d: \"M134.07666,154.794a8.0003,8.0003,0,0,0-12.14844-.00049l-48.00293,56A8,8,0,0,0,79.99951,224h96a8.00032,8.00032,0,0,0,6.07422-13.20605Z\"\n  }), React.createElement(\"path\", {\n    d: \"M208.00244,40H47.99951a24.0275,24.0275,0,0,0-24,24V176a24.0275,24.0275,0,0,0,24,24h14.104l47.67919-55.62231a24.00045,24.00045,0,0,1,36.44239.0039L193.895,200h14.10742a24.0275,24.0275,0,0,0,24-24V64A24.0275,24.0275,0,0,0,208.00244,40Z\"\n  })));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"128.002 160 176 216 80 216 128.002 160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M64,192H48a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16H192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"128.002 160 176 216 80 216 128.002 160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M64,192H48a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16H192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"128.002 160 176 216 80 216 128.002 160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M64,192H48a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16H192\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Airplay = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nAirplay.displayName = \"Airplay\";\nexport default Airplay;","map":{"version":3,"sources":["../../src/icons/Airplay.tsx"],"names":["pathsByWeight","points","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","d","opacity","renderPath","renderPathForWeight","Airplay","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polygon\n      points=\"128.002 160 176 216 80 216 128.002 160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M48,192a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M208,48H48A16.00016,16.00016,0,0,0,32,64V176a16.00016,16.00016,0,0,0,16,16h52.57227l27.43017-32,27.42725,32H208a16.00016,16.00016,0,0,0,16-16V64A16.00016,16.00016,0,0,0,208,48Z\"\n      opacity=\"0.2\"\n    />\n    <polygon\n      points=\"128.002 160 176 216 80 216 128.002 160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M64,192H48a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16H192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g>\n      <path d=\"M134.07666,154.794a8.0003,8.0003,0,0,0-12.14844-.00049l-48.00293,56A8,8,0,0,0,79.99951,224h96a8.00032,8.00032,0,0,0,6.07422-13.20605Z\" />\n      <path d=\"M208.00244,40H47.99951a24.0275,24.0275,0,0,0-24,24V176a24.0275,24.0275,0,0,0,24,24h14.104l47.67919-55.62231a24.00045,24.00045,0,0,1,36.44239.0039L193.895,200h14.10742a24.0275,24.0275,0,0,0,24-24V64A24.0275,24.0275,0,0,0,208.00244,40Z\" />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polygon\n      points=\"128.002 160 176 216 80 216 128.002 160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M64,192H48a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16H192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polygon\n      points=\"128.002 160 176 216 80 216 128.002 160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M64,192H48a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16H192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polygon\n      points=\"128.002 160 176 216 80 216 128.002 160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M64,192H48a16,16,0,0,1-16-16V64A16,16,0,0,1,48,48H208a16,16,0,0,1,16,16V176a16,16,0,0,1-16,16H192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Airplay = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nAirplay.displayName = \"Airplay\";\n\nexport default Airplay;\n"]},"metadata":{},"sourceType":"module"}