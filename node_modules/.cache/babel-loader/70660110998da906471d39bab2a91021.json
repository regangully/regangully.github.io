{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M96,192v8a32,32,0,0,0,64,0v-8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M96,192v8a32,32,0,0,0,64,0v-8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M220.81445,175.9397c-5.93457-10.21582-13.00976-29.60157-13.00976-63.93946v-7.09668c0-44.28515-35.52735-80.57715-79.19629-80.90136-.2041-.001-.40625-.002-.61035-.002a79.89891,79.89891,0,0,0-79.79493,80v8c0,34.33594-7.0791,53.72071-13.0166,63.93555A15.99885,15.99885,0,0,0,48.9834,200.00024H88a40,40,0,0,0,80,0h39.0166a15.99808,15.99808,0,0,0,13.79785-24.06054ZM128,224.00024a24.0275,24.0275,0,0,1-24-24h48A24.0275,24.0275,0,0,1,128,224.00024Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M96,192v8a32,32,0,0,0,64,0v-8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M96,192v8a32,32,0,0,0,64,0v-8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M96,192v8a32,32,0,0,0,64,0v-8\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Bell = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nBell.displayName = \"Bell\";\nexport default Bell;","map":{"version":3,"sources":["../../src/icons/Bell.tsx"],"names":["pathsByWeight","d","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","opacity","renderPath","renderPathForWeight","Bell","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M220.81445,175.9397c-5.93457-10.21582-13.00976-29.60157-13.00976-63.93946v-7.09668c0-44.28515-35.52735-80.57715-79.19629-80.90136-.2041-.001-.40625-.002-.61035-.002a79.89891,79.89891,0,0,0-79.79493,80v8c0,34.33594-7.0791,53.72071-13.0166,63.93555A15.99885,15.99885,0,0,0,48.9834,200.00024H88a40,40,0,0,0,80,0h39.0166a15.99808,15.99808,0,0,0,13.79785-24.06054ZM128,224.00024a24.0275,24.0275,0,0,1-24-24h48A24.0275,24.0275,0,0,1,128,224.00024Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M56.20305,104A71.899,71.899,0,0,1,128.5484,32.002c39.58967.29432,71.25651,33.20133,71.25651,72.90185V112c0,35.81563,7.49325,56.59893,14.093,67.95814A7.999,7.999,0,0,1,207.01628,192H48.98365A7.99908,7.99908,0,0,1,42.103,179.95641c6.60328-11.35959,14.1-32.1426,14.1-67.95641Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Bell = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nBell.displayName = \"Bell\";\n\nexport default Bell;\n"]},"metadata":{},"sourceType":"module"}