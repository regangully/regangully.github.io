{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"69.32731\",\n    y1: \"83.99548\",\n    x2: \"186.21472\",\n    y2: \"83.99548\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"167.99548\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"128 128 180.923 87.995 74.661 87.995 128 128\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"167.99548\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"74.66065\",\n    y1: \"87.99548\",\n    x2: \"180.92301\",\n    y2: \"87.99548\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M193.64844,88.40527A16.08547,16.08547,0,0,0,200,75.64111V40a16.01833,16.01833,0,0,0-16-16H72A16.01833,16.01833,0,0,0,56,40V76a16.07553,16.07553,0,0,0,6.3999,12.7998l18.127,13.59522.00048.00049L114.6665,128,62.40039,167.2002A16.07459,16.07459,0,0,0,56,180v36a16.01833,16.01833,0,0,0,16,16H184a16.01833,16.01833,0,0,0,16-16V180.35889a16.08452,16.08452,0,0,0-6.352-12.76416L141.2666,128l22.70459-17.16211ZM72,40H184V75.6416l-5.76025,4.354H77.32764L72,76ZM184,180.35889V216H72V180l48-36v23.99561a8,8,0,0,0,16,0V144.07568Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"74.66065\",\n    y1: \"87.99548\",\n    x2: \"180.92301\",\n    y2: \"87.99548\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"167.99548\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"74.66065\",\n    y1: \"87.99548\",\n    x2: \"180.92301\",\n    y2: \"87.99548\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"167.99548\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"74.66065\",\n    y1: \"87.99548\",\n    x2: \"180.92301\",\n    y2: \"87.99548\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"167.99548\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar HourglassMedium = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nHourglassMedium.displayName = \"HourglassMedium\";\nexport default HourglassMedium;","map":{"version":3,"sources":["../../src/icons/HourglassMedium.tsx"],"names":["pathsByWeight","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","d","points","opacity","renderPath","renderPathForWeight","HourglassMedium","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"69.32731\"\n      y1=\"83.99548\"\n      x2=\"186.21472\"\n      y2=\"83.99548\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"167.99548\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon\n      points=\"128 128 180.923 87.995 74.661 87.995 128 128\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"167.99548\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"74.66065\"\n      y1=\"87.99548\"\n      x2=\"180.92301\"\n      y2=\"87.99548\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M193.64844,88.40527A16.08547,16.08547,0,0,0,200,75.64111V40a16.01833,16.01833,0,0,0-16-16H72A16.01833,16.01833,0,0,0,56,40V76a16.07553,16.07553,0,0,0,6.3999,12.7998l18.127,13.59522.00048.00049L114.6665,128,62.40039,167.2002A16.07459,16.07459,0,0,0,56,180v36a16.01833,16.01833,0,0,0,16,16H184a16.01833,16.01833,0,0,0,16-16V180.35889a16.08452,16.08452,0,0,0-6.352-12.76416L141.2666,128l22.70459-17.16211ZM72,40H184V75.6416l-5.76025,4.354H77.32764L72,76ZM184,180.35889V216H72V180l48-36v23.99561a8,8,0,0,0,16,0V144.07568Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"74.66065\"\n      y1=\"87.99548\"\n      x2=\"180.92301\"\n      y2=\"87.99548\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"167.99548\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"74.66065\"\n      y1=\"87.99548\"\n      x2=\"180.92301\"\n      y2=\"87.99548\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"167.99548\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128,67.2,82.4A8,8,0,0,1,64,76V40a8,8,0,0,1,8-8H184a8,8,0,0,1,8,8V75.6412a8,8,0,0,1-3.17594,6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,128,67.2,173.6A8,8,0,0,0,64,180v36a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V180.3588a8,8,0,0,0-3.17594-6.38188L128,128h0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"74.66065\"\n      y1=\"87.99548\"\n      x2=\"180.92301\"\n      y2=\"87.99548\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"167.99548\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst HourglassMedium = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nHourglassMedium.displayName = \"HourglassMedium\";\n\nexport default HourglassMedium;\n"]},"metadata":{},"sourceType":"module"}