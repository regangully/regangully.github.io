{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"39.99414\",\n    y: \"88\",\n    width: \"176\",\n    height: \"128\",\n    rx: \"8\",\n    strokeWidth: \"24\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M91.99414,88V52a36,36,0,1,1,72,0V88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"127.99414\",\n    cy: \"144\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"127.99414\",\n    y1: \"164\",\n    x2: \"127.99414\",\n    y2: \"180\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M207.99414,88h-160a8,8,0,0,0-8,8V208a8,8,0,0,0,8,8h160a8,8,0,0,0,8-8V96A8,8,0,0,0,207.99414,88Zm-80,72a20,20,0,1,1,20-20A20.00006,20.00006,0,0,1,127.99414,160Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"127.99414\",\n    cy: \"140\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"127.99414\",\n    y1: \"160\",\n    x2: \"127.99414\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"39.99414\",\n    y: \"88\",\n    width: \"176\",\n    height: \"128\",\n    rx: \"8\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M91.99414,88V52a36,36,0,1,1,72,0V88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"circle\", {\n    cx: \"127.99414\",\n    cy: \"140\",\n    r: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M207.99414,80h-36V52a44,44,0,1,0-88,0V80h-36a16.01833,16.01833,0,0,0-16,16V208a16.01833,16.01833,0,0,0,16,16h160a16.01833,16.01833,0,0,0,16-16V96A16.01833,16.01833,0,0,0,207.99414,80Zm-72,86.82935V184a8,8,0,1,1-16,0V166.82935a28,28,0,1,1,16,0Zm20-86.82935h-56V52a28,28,0,1,1,56,0Z\"\n  })));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"127.99414\",\n    cy: \"140\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"127.99414\",\n    y1: \"160\",\n    x2: \"127.99414\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"39.99414\",\n    y: \"88\",\n    width: \"176\",\n    height: \"128\",\n    rx: \"8\",\n    strokeWidth: \"12\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M91.99414,88V52a36,36,0,1,1,72,0V88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"127.99414\",\n    cy: \"140\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"127.99414\",\n    y1: \"160\",\n    x2: \"127.99414\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"39.99414\",\n    y: \"88\",\n    width: \"176\",\n    height: \"128\",\n    rx: \"8\",\n    strokeWidth: \"8\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M91.99414,88V52a36,36,0,1,1,72,0V88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"127.99414\",\n    cy: \"140\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"127.99414\",\n    y1: \"160\",\n    x2: \"127.99414\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"39.99414\",\n    y: \"88\",\n    width: \"176\",\n    height: \"128\",\n    rx: \"8\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M91.99414,88V52a36,36,0,1,1,72,0V88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar LockKey = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nLockKey.displayName = \"LockKey\";\nexport default LockKey;","map":{"version":3,"sources":["../../src/icons/LockKey.tsx"],"names":["pathsByWeight","x","y","width","height","rx","strokeWidth","stroke","color","strokeLinecap","strokeLinejoin","fill","d","cx","cy","r","x1","y1","x2","y2","opacity","renderPath","renderPathForWeight","LockKey","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"39.99414\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle\n      cx=\"127.99414\"\n      cy=\"144\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"127.99414\"\n      y1=\"164\"\n      x2=\"127.99414\"\n      y2=\"180\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M207.99414,88h-160a8,8,0,0,0-8,8V208a8,8,0,0,0,8,8h160a8,8,0,0,0,8-8V96A8,8,0,0,0,207.99414,88Zm-80,72a20,20,0,1,1,20-20A20.00006,20.00006,0,0,1,127.99414,160Z\"\n      opacity=\"0.2\"\n    />\n    <circle\n      cx=\"127.99414\"\n      cy=\"140\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"127.99414\"\n      y1=\"160\"\n      x2=\"127.99414\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"39.99414\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g>\n      <circle cx=\"127.99414\" cy=\"140\" r=\"12\" />\n      <path d=\"M207.99414,80h-36V52a44,44,0,1,0-88,0V80h-36a16.01833,16.01833,0,0,0-16,16V208a16.01833,16.01833,0,0,0,16,16h160a16.01833,16.01833,0,0,0,16-16V96A16.01833,16.01833,0,0,0,207.99414,80Zm-72,86.82935V184a8,8,0,1,1-16,0V166.82935a28,28,0,1,1,16,0Zm20-86.82935h-56V52a28,28,0,1,1,56,0Z\" />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"127.99414\"\n      cy=\"140\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"127.99414\"\n      y1=\"160\"\n      x2=\"127.99414\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"39.99414\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"127.99414\"\n      cy=\"140\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"127.99414\"\n      y1=\"160\"\n      x2=\"127.99414\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"39.99414\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"127.99414\"\n      cy=\"140\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"127.99414\"\n      y1=\"160\"\n      x2=\"127.99414\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"39.99414\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst LockKey = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nLockKey.displayName = \"LockKey\";\n\nexport default LockKey;\n"]},"metadata":{},"sourceType":"module"}