{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    strokeWidth: \"24\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"76\",\n    r: \"16\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"68\",\n    r: \"12\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M192,24H64A24.0275,24.0275,0,0,0,40,48V208a24.0275,24.0275,0,0,0,24,24H192a24.0275,24.0275,0,0,0,24-24V48A24.0275,24.0275,0,0,0,192,24ZM128,80a12,12,0,1,1,12-12A12,12,0,0,1,128,80Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    strokeWidth: \"12\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"68\",\n    r: \"10\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    strokeWidth: \"8\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"68\",\n    r: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"48\",\n    width: \"192\",\n    height: \"160\",\n    rx: \"16\",\n    transform: \"translate(256) rotate(90)\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"68\",\n    r: \"12\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar DeviceTabletCamera = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nDeviceTabletCamera.displayName = \"DeviceTabletCamera\";\nexport default DeviceTabletCamera;","map":{"version":3,"sources":["../../src/icons/DeviceTabletCamera.tsx"],"names":["pathsByWeight","x","y","width","height","rx","transform","strokeWidth","stroke","color","strokeLinecap","strokeLinejoin","fill","cx","cy","r","opacity","d","renderPath","renderPathForWeight","DeviceTabletCamera","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"128\" cy=\"76\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"128\" cy=\"68\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M192,24H64A24.0275,24.0275,0,0,0,40,48V208a24.0275,24.0275,0,0,0,24,24H192a24.0275,24.0275,0,0,0,24-24V48A24.0275,24.0275,0,0,0,192,24ZM128,80a12,12,0,1,1,12-12A12,12,0,0,1,128,80Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"128\" cy=\"68\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"128\" cy=\"68\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"160\"\n      rx=\"16\"\n      transform=\"translate(256) rotate(90)\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"128\" cy=\"68\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst DeviceTabletCamera = forwardRef<SVGSVGElement, IconProps>(\n  (props, ref) => <IconBase ref={ref} {...props} renderPath={renderPath} />\n);\n\nDeviceTabletCamera.displayName = \"DeviceTabletCamera\";\n\nexport default DeviceTabletCamera;\n"]},"metadata":{},"sourceType":"module"}