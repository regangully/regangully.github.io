{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"60\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"60\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"128\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"128\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"196\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"196\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"196\",\n    r: \"16\"\n  }));\n});\npathsByWeight.set(\"duotone\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"60\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"60\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"128\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"128\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"196\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"196\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"196\",\n    r: \"12\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M60,48A12,12,0,1,0,72,60,12.01375,12.01375,0,0,0,60,48Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,128,48Zm68,24a12,12,0,1,0-12-12A12.01375,12.01375,0,0,0,196,72ZM60,184a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,60,184Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,128,184Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,196,184ZM60,116a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,60,116Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,128,116Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,196,116Z\"\n  }));\n});\npathsByWeight.set(\"light\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"60\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"60\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"128\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"128\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"196\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"196\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"196\",\n    r: \"10\"\n  }));\n});\npathsByWeight.set(\"thin\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"60\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"60\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"128\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"128\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"196\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"196\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"196\",\n    r: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"60\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"60\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"60\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"128\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"128\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"60\",\n    cy: \"196\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"196\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"196\",\n    cy: \"196\",\n    r: \"12\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar DotsNine = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nDotsNine.displayName = \"DotsNine\";\nexport default DotsNine;","map":{"version":3,"sources":["../../src/icons/DotsNine.tsx"],"names":["pathsByWeight","cx","cy","r","d","renderPath","renderPathForWeight","DotsNine","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", () => (\n  <>\n    <circle cx=\"60\" cy=\"60\" r=\"16\" />\n    <circle cx=\"128\" cy=\"60\" r=\"16\" />\n    <circle cx=\"196\" cy=\"60\" r=\"16\" />\n    <circle cx=\"60\" cy=\"128\" r=\"16\" />\n    <circle cx=\"128\" cy=\"128\" r=\"16\" />\n    <circle cx=\"196\" cy=\"128\" r=\"16\" />\n    <circle cx=\"60\" cy=\"196\" r=\"16\" />\n    <circle cx=\"128\" cy=\"196\" r=\"16\" />\n    <circle cx=\"196\" cy=\"196\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", () => (\n  <>\n    <circle cx=\"60\" cy=\"60\" r=\"12\" />\n    <circle cx=\"128\" cy=\"60\" r=\"12\" />\n    <circle cx=\"196\" cy=\"60\" r=\"12\" />\n    <circle cx=\"60\" cy=\"128\" r=\"12\" />\n    <circle cx=\"128\" cy=\"128\" r=\"12\" />\n    <circle cx=\"196\" cy=\"128\" r=\"12\" />\n    <circle cx=\"60\" cy=\"196\" r=\"12\" />\n    <circle cx=\"128\" cy=\"196\" r=\"12\" />\n    <circle cx=\"196\" cy=\"196\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M60,48A12,12,0,1,0,72,60,12.01375,12.01375,0,0,0,60,48Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,128,48Zm68,24a12,12,0,1,0-12-12A12.01375,12.01375,0,0,0,196,72ZM60,184a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,60,184Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,128,184Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,196,184ZM60,116a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,60,116Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,128,116Zm68,0a12,12,0,1,0,12,12A12.01375,12.01375,0,0,0,196,116Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", () => (\n  <>\n    <circle cx=\"60\" cy=\"60\" r=\"10\" />\n    <circle cx=\"128\" cy=\"60\" r=\"10\" />\n    <circle cx=\"196\" cy=\"60\" r=\"10\" />\n    <circle cx=\"60\" cy=\"128\" r=\"10\" />\n    <circle cx=\"128\" cy=\"128\" r=\"10\" />\n    <circle cx=\"196\" cy=\"128\" r=\"10\" />\n    <circle cx=\"60\" cy=\"196\" r=\"10\" />\n    <circle cx=\"128\" cy=\"196\" r=\"10\" />\n    <circle cx=\"196\" cy=\"196\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", () => (\n  <>\n    <circle cx=\"60\" cy=\"60\" r=\"8\" />\n    <circle cx=\"128\" cy=\"60\" r=\"8\" />\n    <circle cx=\"196\" cy=\"60\" r=\"8\" />\n    <circle cx=\"60\" cy=\"128\" r=\"8\" />\n    <circle cx=\"128\" cy=\"128\" r=\"8\" />\n    <circle cx=\"196\" cy=\"128\" r=\"8\" />\n    <circle cx=\"60\" cy=\"196\" r=\"8\" />\n    <circle cx=\"128\" cy=\"196\" r=\"8\" />\n    <circle cx=\"196\" cy=\"196\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", () => (\n  <>\n    <circle cx=\"60\" cy=\"60\" r=\"12\" />\n    <circle cx=\"128\" cy=\"60\" r=\"12\" />\n    <circle cx=\"196\" cy=\"60\" r=\"12\" />\n    <circle cx=\"60\" cy=\"128\" r=\"12\" />\n    <circle cx=\"128\" cy=\"128\" r=\"12\" />\n    <circle cx=\"196\" cy=\"128\" r=\"12\" />\n    <circle cx=\"60\" cy=\"196\" r=\"12\" />\n    <circle cx=\"128\" cy=\"196\" r=\"12\" />\n    <circle cx=\"196\" cy=\"196\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst DotsNine = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nDotsNine.displayName = \"DotsNine\";\n\nexport default DotsNine;\n"]},"metadata":{},"sourceType":"module"}