{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"24\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"80 80 128 128 176 80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M184.56836,128H224a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H71.43164\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"188\",\n    cy: \"168\",\n    r: \"16\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"24\",\n    y: \"128\",\n    width: \"208\",\n    height: \"80\",\n    rx: \"8\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"24\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"80 80 128 128 176 80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"188\",\n    cy: \"168\",\n    r: \"12\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n    d: \"M122.34326,133.65723c.02588.02588.05469.04785.08106.07324.16211.15771.32861.31152.50341.45508.09766.08008.20118.15039.30176.22558.1084.08106.21485.165.32764.24073.11621.07812.2373.1455.35693.21679.10449.0625.20655.12793.31446.18555.12011.06445.24414.11914.36669.17676.11426.0542.22657.11084.34327.15967.11816.04882.23925.08837.35937.13134.126.04541.251.09375.37988.13282.11963.03613.24122.063.36231.09326.13184.0332.26269.07031.397.09716.13965.02735.28028.04395.42041.064.11817.01709.23389.03906.353.05078.26269.02588.52588.04.78955.04s.52686-.01416.78955-.04c.11914-.01172.23486-.03369.353-.05078.14013-.02.28076-.03662.42041-.064.13428-.02685.26513-.064.397-.09716.12109-.03028.24268-.05713.36231-.09326.1289-.03907.2539-.08741.37988-.13282.12012-.043.24121-.08252.35937-.13134.1167-.04883.229-.10547.34327-.15967.12255-.05762.24658-.11231.36669-.17676.10791-.05762.21-.12305.31446-.18555.11963-.07129.24072-.13867.35693-.21679.11279-.07569.21924-.15967.32764-.24073.10058-.07519.2041-.1455.30176-.22558.17822-.14649.34765-.30225.51269-.46338.023-.023.04883-.042.07178-.06494l48-48a8.00018,8.00018,0,1,0-11.31348-11.31446L136,108.68652V24a8,8,0,0,0-16,0v84.68652L85.65674,74.34277A8.00018,8.00018,0,0,0,74.34326,85.65723Z\"\n  }), React.createElement(\"path\", {\n    d: \"M224,120H169.94141L144.9707,144.9707a24.00066,24.00066,0,0,1-33.9414,0L86.05859,120H32a16.01833,16.01833,0,0,0-16,16v64a16.01833,16.01833,0,0,0,16,16H224a16.01833,16.01833,0,0,0,16-16V136A16.01833,16.01833,0,0,0,224,120Zm-35.99951,60a12,12,0,1,1,12-12A12,12,0,0,1,188.00049,180Z\"\n  })));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"24\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"80 80 128 128 176 80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"188\",\n    cy: \"168\",\n    r: \"10\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"24\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"80 80 128 128 176 80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"188\",\n    cy: \"168\",\n    r: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"24\",\n    x2: \"128\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"80 80 128 128 176 80\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"188\",\n    cy: \"168\",\n    r: \"12\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Download = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nDownload.displayName = \"Download\";\nexport default Download;","map":{"version":3,"sources":["../../src/icons/Download.tsx"],"names":["pathsByWeight","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","points","d","cx","cy","r","x","y","width","height","rx","opacity","renderPath","renderPathForWeight","Download","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"24\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"80 80 128 128 176 80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M184.56836,128H224a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H71.43164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"188\" cy=\"168\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect x=\"24\" y=\"128\" width=\"208\" height=\"80\" rx=\"8\" opacity=\"0.2\" />\n    <path\n      d=\"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"24\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"80 80 128 128 176 80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"188\" cy=\"168\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g>\n      <path d=\"M122.34326,133.65723c.02588.02588.05469.04785.08106.07324.16211.15771.32861.31152.50341.45508.09766.08008.20118.15039.30176.22558.1084.08106.21485.165.32764.24073.11621.07812.2373.1455.35693.21679.10449.0625.20655.12793.31446.18555.12011.06445.24414.11914.36669.17676.11426.0542.22657.11084.34327.15967.11816.04882.23925.08837.35937.13134.126.04541.251.09375.37988.13282.11963.03613.24122.063.36231.09326.13184.0332.26269.07031.397.09716.13965.02735.28028.04395.42041.064.11817.01709.23389.03906.353.05078.26269.02588.52588.04.78955.04s.52686-.01416.78955-.04c.11914-.01172.23486-.03369.353-.05078.14013-.02.28076-.03662.42041-.064.13428-.02685.26513-.064.397-.09716.12109-.03028.24268-.05713.36231-.09326.1289-.03907.2539-.08741.37988-.13282.12012-.043.24121-.08252.35937-.13134.1167-.04883.229-.10547.34327-.15967.12255-.05762.24658-.11231.36669-.17676.10791-.05762.21-.12305.31446-.18555.11963-.07129.24072-.13867.35693-.21679.11279-.07569.21924-.15967.32764-.24073.10058-.07519.2041-.1455.30176-.22558.17822-.14649.34765-.30225.51269-.46338.023-.023.04883-.042.07178-.06494l48-48a8.00018,8.00018,0,1,0-11.31348-11.31446L136,108.68652V24a8,8,0,0,0-16,0v84.68652L85.65674,74.34277A8.00018,8.00018,0,0,0,74.34326,85.65723Z\" />\n      <path d=\"M224,120H169.94141L144.9707,144.9707a24.00066,24.00066,0,0,1-33.9414,0L86.05859,120H32a16.01833,16.01833,0,0,0-16,16v64a16.01833,16.01833,0,0,0,16,16H224a16.01833,16.01833,0,0,0,16-16V136A16.01833,16.01833,0,0,0,224,120Zm-35.99951,60a12,12,0,1,1,12-12A12,12,0,0,1,188.00049,180Z\" />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"24\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"80 80 128 128 176 80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"188\" cy=\"168\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"24\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"80 80 128 128 176 80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"188\" cy=\"168\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"24\"\n      x2=\"128\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"80 80 128 128 176 80\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"188\" cy=\"168\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Download = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nDownload.displayName = \"Download\";\n\nexport default Download;\n"]},"metadata":{},"sourceType":"module"}