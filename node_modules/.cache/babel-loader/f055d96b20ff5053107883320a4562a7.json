{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"16\",\n    y1: \"215.98316\",\n    x2: \"240\",\n    y2: \"215.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"67.99414\",\n    y1: \"71.98316\",\n    x2: \"95.99414\",\n    y2: \"71.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"79.99414\",\n    y1: \"135.98316\",\n    x2: \"107.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"67.99414\",\n    y1: \"175.98316\",\n    x2: \"95.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"179.99414\",\n    y1: \"175.98316\",\n    x2: \"187.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"179.99414\",\n    y1: \"135.98316\",\n    x2: \"187.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"16\",\n    y1: \"215.98316\",\n    x2: \"240\",\n    y2: \"215.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"63.99414\",\n    y1: \"71.98316\",\n    x2: \"95.99414\",\n    y2: \"71.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"79.99414\",\n    y1: \"135.98316\",\n    x2: \"111.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"63.99414\",\n    y1: \"175.98316\",\n    x2: \"95.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"175.99414\",\n    y1: \"175.98316\",\n    x2: \"191.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"175.99414\",\n    y1: \"135.98316\",\n    x2: \"191.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n    d: \"M240,207.98316h-8.00586v-104a16.01833,16.01833,0,0,0-16-16h-64v-48a16.01833,16.01833,0,0,0-16-16h-96a16.01833,16.01833,0,0,0-16,16v168H16a8,8,0,0,0,0,16H240a8,8,0,0,0,0-16Zm-120.00586-72a8.00009,8.00009,0,0,1-8,8h-32a8,8,0,0,1,0-16h32A8.00008,8.00008,0,0,1,119.99414,135.98316Zm-56-72h32a8,8,0,1,1,0,16h-32a8,8,0,0,1,0-16Zm0,104h32a8,8,0,1,1,0,16h-32a8,8,0,0,1,0-16Zm88-64h64v104h-64Z\"\n  }), React.createElement(\"path\", {\n    d: \"M191.99414,167.98316h-16a8,8,0,0,0,0,16h16a8,8,0,1,0,0-16Z\"\n  }), React.createElement(\"path\", {\n    d: \"M175.99414,143.98316h16a8,8,0,1,0,0-16h-16a8,8,0,0,0,0,16Z\"\n  })));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"16\",\n    y1: \"215.98316\",\n    x2: \"240\",\n    y2: \"215.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"63.99414\",\n    y1: \"71.98316\",\n    x2: \"95.99414\",\n    y2: \"71.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"79.99414\",\n    y1: \"135.98316\",\n    x2: \"111.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"63.99414\",\n    y1: \"175.98316\",\n    x2: \"95.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"175.99414\",\n    y1: \"175.98316\",\n    x2: \"191.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"175.99414\",\n    y1: \"135.98316\",\n    x2: \"191.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"16\",\n    y1: \"215.98316\",\n    x2: \"240\",\n    y2: \"215.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"63.99414\",\n    y1: \"71.98316\",\n    x2: \"95.99414\",\n    y2: \"71.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"79.99414\",\n    y1: \"135.98316\",\n    x2: \"111.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"63.99414\",\n    y1: \"175.98316\",\n    x2: \"95.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"175.99414\",\n    y1: \"175.98316\",\n    x2: \"191.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"175.99414\",\n    y1: \"135.98316\",\n    x2: \"191.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"16\",\n    y1: \"215.98316\",\n    x2: \"240\",\n    y2: \"215.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"63.99414\",\n    y1: \"71.98316\",\n    x2: \"95.99414\",\n    y2: \"71.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"79.99414\",\n    y1: \"135.98316\",\n    x2: \"111.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"63.99414\",\n    y1: \"175.98316\",\n    x2: \"95.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"175.99414\",\n    y1: \"175.98316\",\n    x2: \"191.99414\",\n    y2: \"175.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"175.99414\",\n    y1: \"135.98316\",\n    x2: \"191.99414\",\n    y2: \"135.98316\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Buildings = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nBuildings.displayName = \"Buildings\";\nexport default Buildings;","map":{"version":3,"sources":["../../src/icons/Buildings.tsx"],"names":["pathsByWeight","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","d","opacity","renderPath","renderPathForWeight","Buildings","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"16\"\n      y1=\"215.98316\"\n      x2=\"240\"\n      y2=\"215.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"67.99414\"\n      y1=\"71.98316\"\n      x2=\"95.99414\"\n      y2=\"71.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"79.99414\"\n      y1=\"135.98316\"\n      x2=\"107.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"67.99414\"\n      y1=\"175.98316\"\n      x2=\"95.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"179.99414\"\n      y1=\"175.98316\"\n      x2=\"187.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"179.99414\"\n      y1=\"135.98316\"\n      x2=\"187.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\"\n      opacity=\"0.2\"\n    />\n    <line\n      x1=\"16\"\n      y1=\"215.98316\"\n      x2=\"240\"\n      y2=\"215.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"63.99414\"\n      y1=\"71.98316\"\n      x2=\"95.99414\"\n      y2=\"71.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"79.99414\"\n      y1=\"135.98316\"\n      x2=\"111.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"63.99414\"\n      y1=\"175.98316\"\n      x2=\"95.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"175.99414\"\n      y1=\"175.98316\"\n      x2=\"191.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"175.99414\"\n      y1=\"135.98316\"\n      x2=\"191.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g>\n      <path d=\"M240,207.98316h-8.00586v-104a16.01833,16.01833,0,0,0-16-16h-64v-48a16.01833,16.01833,0,0,0-16-16h-96a16.01833,16.01833,0,0,0-16,16v168H16a8,8,0,0,0,0,16H240a8,8,0,0,0,0-16Zm-120.00586-72a8.00009,8.00009,0,0,1-8,8h-32a8,8,0,0,1,0-16h32A8.00008,8.00008,0,0,1,119.99414,135.98316Zm-56-72h32a8,8,0,1,1,0,16h-32a8,8,0,0,1,0-16Zm0,104h32a8,8,0,1,1,0,16h-32a8,8,0,0,1,0-16Zm88-64h64v104h-64Z\" />\n      <path d=\"M191.99414,167.98316h-16a8,8,0,0,0,0,16h16a8,8,0,1,0,0-16Z\" />\n      <path d=\"M175.99414,143.98316h16a8,8,0,1,0,0-16h-16a8,8,0,0,0,0,16Z\" />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"16\"\n      y1=\"215.98316\"\n      x2=\"240\"\n      y2=\"215.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"63.99414\"\n      y1=\"71.98316\"\n      x2=\"95.99414\"\n      y2=\"71.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"79.99414\"\n      y1=\"135.98316\"\n      x2=\"111.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"63.99414\"\n      y1=\"175.98316\"\n      x2=\"95.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"175.99414\"\n      y1=\"175.98316\"\n      x2=\"191.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"175.99414\"\n      y1=\"135.98316\"\n      x2=\"191.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"16\"\n      y1=\"215.98316\"\n      x2=\"240\"\n      y2=\"215.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"63.99414\"\n      y1=\"71.98316\"\n      x2=\"95.99414\"\n      y2=\"71.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"79.99414\"\n      y1=\"135.98316\"\n      x2=\"111.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"63.99414\"\n      y1=\"175.98316\"\n      x2=\"95.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"175.99414\"\n      y1=\"175.98316\"\n      x2=\"191.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"175.99414\"\n      y1=\"135.98316\"\n      x2=\"191.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"16\"\n      y1=\"215.98316\"\n      x2=\"240\"\n      y2=\"215.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M143.99414,215.98316v-176a8,8,0,0,0-8-8h-96a8,8,0,0,0-8,8v176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M223.99414,215.98316v-112a8,8,0,0,0-8-8h-72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"63.99414\"\n      y1=\"71.98316\"\n      x2=\"95.99414\"\n      y2=\"71.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"79.99414\"\n      y1=\"135.98316\"\n      x2=\"111.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"63.99414\"\n      y1=\"175.98316\"\n      x2=\"95.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"175.99414\"\n      y1=\"175.98316\"\n      x2=\"191.99414\"\n      y2=\"175.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"175.99414\"\n      y1=\"135.98316\"\n      x2=\"191.99414\"\n      y2=\"135.98316\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Buildings = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nBuildings.displayName = \"Buildings\";\n\nexport default Buildings;\n"]},"metadata":{},"sourceType":"module"}