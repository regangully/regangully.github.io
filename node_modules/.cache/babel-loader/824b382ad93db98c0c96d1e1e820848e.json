{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M224,96V200a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V96l96-64Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 96 145.455 152 110.545 152 32 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"224 96 145.455 152 110.545 152 32 96 128 32 224 96\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 96 145.455 152 110.545 152 32 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M231.99512,95.92334a7.928,7.928,0,0,0-.22608-1.81494c-.0166-.06885-.03759-.13672-.05615-.20508q-.09154-.33618-.2124-.666c-.03028-.08154-.061-.16162-.09326-.24218-.0835-.20459-.17725-.40625-.27832-.606-.03955-.07764-.07618-.15625-.11768-.23242-.11914-.21729-.25146-.4292-.39307-.6377-.03125-.04638-.05761-.09521-.08984-.14062l-.01465-.023a8.1872,8.1872,0,0,0-.55469-.68945c-.04345-.04883-.0913-.09278-.13574-.13965-.16845-.17969-.34228-.35108-.52344-.51172-.061-.0542-.124-.105-.18652-.15723q-.27686-.23-.56933-.4331c-.03711-.02539-.06934-.05567-.10645-.08057l-96-64a8.00131,8.00131,0,0,0-8.875,0l-96,64c-.03613.02393-.06689.05322-.102.07764q-.29736.20508-.57666.43847c-.061.05078-.12256.10059-.18164.15284-.18311.1621-.35889.335-.52832.5166-.04346.0459-.08985.08886-.13233.13574a8.114,8.114,0,0,0-.55517.69043l-.01465.023c-.03223.04541-.05859.09424-.08984.14062-.14161.2085-.27393.42041-.39307.6377-.0415.07617-.07813.15478-.11768.23242-.10107.19971-.19482.40137-.27832.606-.03222.08056-.063.16064-.09326.24218q-.12157.33033-.2124.666c-.01856.06836-.03955.13623-.05615.20508a7.928,7.928,0,0,0-.22608,1.81494C24.00439,95.94922,24,95.97412,24,96V200a16.01833,16.01833,0,0,0,16,16H216a16.01833,16.01833,0,0,0,16-16V96C232,95.97412,231.99561,95.94922,231.99512,95.92334ZM40,200V111.52881l65.90137,46.98486A8.00118,8.00118,0,0,0,110.5459,160h34.9082a8.00118,8.00118,0,0,0,4.64453-1.48633L216,111.52881V200Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 96 145.455 152 110.545 152 32 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 96 145.455 152 110.545 152 32 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 96 145.455 152 110.545 152 32 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar EnvelopeSimpleOpen = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nEnvelopeSimpleOpen.displayName = \"EnvelopeSimpleOpen\";\nexport default EnvelopeSimpleOpen;","map":{"version":3,"sources":["../../src/icons/EnvelopeSimpleOpen.tsx"],"names":["pathsByWeight","d","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","points","opacity","renderPath","renderPathForWeight","EnvelopeSimpleOpen","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M224,96V200a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V96l96-64Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"224 96 145.455 152 110.545 152 32 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon\n      points=\"224 96 145.455 152 110.545 152 32 96 128 32 224 96\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"224 96 145.455 152 110.545 152 32 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M231.99512,95.92334a7.928,7.928,0,0,0-.22608-1.81494c-.0166-.06885-.03759-.13672-.05615-.20508q-.09154-.33618-.2124-.666c-.03028-.08154-.061-.16162-.09326-.24218-.0835-.20459-.17725-.40625-.27832-.606-.03955-.07764-.07618-.15625-.11768-.23242-.11914-.21729-.25146-.4292-.39307-.6377-.03125-.04638-.05761-.09521-.08984-.14062l-.01465-.023a8.1872,8.1872,0,0,0-.55469-.68945c-.04345-.04883-.0913-.09278-.13574-.13965-.16845-.17969-.34228-.35108-.52344-.51172-.061-.0542-.124-.105-.18652-.15723q-.27686-.23-.56933-.4331c-.03711-.02539-.06934-.05567-.10645-.08057l-96-64a8.00131,8.00131,0,0,0-8.875,0l-96,64c-.03613.02393-.06689.05322-.102.07764q-.29736.20508-.57666.43847c-.061.05078-.12256.10059-.18164.15284-.18311.1621-.35889.335-.52832.5166-.04346.0459-.08985.08886-.13233.13574a8.114,8.114,0,0,0-.55517.69043l-.01465.023c-.03223.04541-.05859.09424-.08984.14062-.14161.2085-.27393.42041-.39307.6377-.0415.07617-.07813.15478-.11768.23242-.10107.19971-.19482.40137-.27832.606-.03222.08056-.063.16064-.09326.24218q-.12157.33033-.2124.666c-.01856.06836-.03955.13623-.05615.20508a7.928,7.928,0,0,0-.22608,1.81494C24.00439,95.94922,24,95.97412,24,96V200a16.01833,16.01833,0,0,0,16,16H216a16.01833,16.01833,0,0,0,16-16V96C232,95.97412,231.99561,95.94922,231.99512,95.92334ZM40,200V111.52881l65.90137,46.98486A8.00118,8.00118,0,0,0,110.5459,160h34.9082a8.00118,8.00118,0,0,0,4.64453-1.48633L216,111.52881V200Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"224 96 145.455 152 110.545 152 32 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"224 96 145.455 152 110.545 152 32 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M32,96V200a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V96L128,32Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"224 96 145.455 152 110.545 152 32 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst EnvelopeSimpleOpen = forwardRef<SVGSVGElement, IconProps>(\n  (props, ref) => <IconBase ref={ref} {...props} renderPath={renderPath} />\n);\n\nEnvelopeSimpleOpen.displayName = \"EnvelopeSimpleOpen\";\n\nexport default EnvelopeSimpleOpen;\n"]},"metadata":{},"sourceType":"module"}