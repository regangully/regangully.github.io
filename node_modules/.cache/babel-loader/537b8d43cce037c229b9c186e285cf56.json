{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"144 144 168 120 144 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"45.97561\",\n    y: \"45.97561\",\n    width: \"164.04877\",\n    height: \"164.04877\",\n    rx: \"8\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"24\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M88,148v-4a24,24,0,0,1,24-24h56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"45.97561\",\n    y: \"45.97561\",\n    width: \"164.04877\",\n    height: \"164.04877\",\n    rx: \"8\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polyline\", {\n    points: \"144 144 168 120 144 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"45.97561\",\n    y: \"45.97561\",\n    width: \"164.04877\",\n    height: \"164.04877\",\n    rx: \"8\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M88,152v-8a24,24,0,0,1,24-24h56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M244,116.68555,139.31445,12.001A15.99888,15.99888,0,0,0,116.68652,12L11.999,116.68652A16.02163,16.02163,0,0,0,12,139.31445L116.68555,243.999a15.99888,15.99888,0,0,0,22.62793.001L244.001,139.31348A16.02163,16.02163,0,0,0,244,116.68555ZM175.999,120.022q-.00145.38379-.03906.7666c-.01172.12061-.03418.2378-.05127.35694-.02.13965-.03613.27929-.064.41748-.02637.13525-.06348.26611-.09717.39892-.03027.12012-.05664.24073-.09277.35987-.03956.13037-.0879.25586-.13379.3833-.04248.11914-.08155.23877-.13038.356-.04882.11767-.106.23-.16015.34472-.05762.12256-.11182.2461-.17627.36572-.05762.10791-.12354.21-.186.31495-.0708.11914-.13867.24023-.2163.35644-.07618.11328-.16065.22022-.24219.3291-.07471.1001-.144.20264-.22412.3003-.14893.18115-.30762.35449-.47168.522-.02.02051-.03711.04248-.05713.063l-24,24a8.00018,8.00018,0,0,1-11.31348-11.31446L148.686,128H112a16.01833,16.01833,0,0,0-16,16v8a8,8,0,0,1-16,0v-8a32.03667,32.03667,0,0,1,32-32h36.686l-10.34278-10.34277a8.00018,8.00018,0,0,1,11.31348-11.31446l24,24c.02.02051.03711.04248.05713.063.16406.16748.32275.34082.47168.522.08007.09766.14941.2002.22412.3003.08154.10888.166.21582.24219.3291.07763.11621.1455.2373.2163.35644.0625.105.12842.207.186.31495.06445.11962.11865.24316.17627.36572.0542.11474.11133.22705.16015.34472.04883.11719.0879.23682.13038.356.04589.12744.09423.25293.13379.3833.03613.11914.0625.23975.09277.35987.03369.13281.0708.26367.09717.39892.02783.13819.04394.27783.064.41748.01709.11914.03955.23633.05127.35694q.03809.38232.03906.7666L176,120Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"144 144 168 120 144 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"45.97561\",\n    y: \"45.97561\",\n    width: \"164.04877\",\n    height: \"164.04877\",\n    rx: \"8\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"12\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M88,152v-8a24,24,0,0,1,24-24h56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"144 144 168 120 144 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"45.97561\",\n    y: \"45.97561\",\n    width: \"164.04877\",\n    height: \"164.04877\",\n    rx: \"8\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"8\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M88,152v-8a24,24,0,0,1,24-24h56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"144 144 168 120 144 96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"45.97561\",\n    y: \"45.97561\",\n    width: \"164.04877\",\n    height: \"164.04877\",\n    rx: \"8\",\n    transform: \"translate(-53.01934 128) rotate(-45)\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"path\", {\n    d: \"M88,152v-8a24,24,0,0,1,24-24h56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar TrafficSign = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nTrafficSign.displayName = \"TrafficSign\";\nexport default TrafficSign;","map":{"version":3,"sources":["../../src/icons/TrafficSign.tsx"],"names":["pathsByWeight","points","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","x","y","width","height","rx","transform","d","opacity","renderPath","renderPathForWeight","TrafficSign","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"144 144 168 120 144 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"45.97561\"\n      y=\"45.97561\"\n      width=\"164.04877\"\n      height=\"164.04877\"\n      rx=\"8\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M88,148v-4a24,24,0,0,1,24-24h56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect\n      x=\"45.97561\"\n      y=\"45.97561\"\n      width=\"164.04877\"\n      height=\"164.04877\"\n      rx=\"8\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      opacity=\"0.2\"\n    />\n    <polyline\n      points=\"144 144 168 120 144 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"45.97561\"\n      y=\"45.97561\"\n      width=\"164.04877\"\n      height=\"164.04877\"\n      rx=\"8\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M88,152v-8a24,24,0,0,1,24-24h56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M244,116.68555,139.31445,12.001A15.99888,15.99888,0,0,0,116.68652,12L11.999,116.68652A16.02163,16.02163,0,0,0,12,139.31445L116.68555,243.999a15.99888,15.99888,0,0,0,22.62793.001L244.001,139.31348A16.02163,16.02163,0,0,0,244,116.68555ZM175.999,120.022q-.00145.38379-.03906.7666c-.01172.12061-.03418.2378-.05127.35694-.02.13965-.03613.27929-.064.41748-.02637.13525-.06348.26611-.09717.39892-.03027.12012-.05664.24073-.09277.35987-.03956.13037-.0879.25586-.13379.3833-.04248.11914-.08155.23877-.13038.356-.04882.11767-.106.23-.16015.34472-.05762.12256-.11182.2461-.17627.36572-.05762.10791-.12354.21-.186.31495-.0708.11914-.13867.24023-.2163.35644-.07618.11328-.16065.22022-.24219.3291-.07471.1001-.144.20264-.22412.3003-.14893.18115-.30762.35449-.47168.522-.02.02051-.03711.04248-.05713.063l-24,24a8.00018,8.00018,0,0,1-11.31348-11.31446L148.686,128H112a16.01833,16.01833,0,0,0-16,16v8a8,8,0,0,1-16,0v-8a32.03667,32.03667,0,0,1,32-32h36.686l-10.34278-10.34277a8.00018,8.00018,0,0,1,11.31348-11.31446l24,24c.02.02051.03711.04248.05713.063.16406.16748.32275.34082.47168.522.08007.09766.14941.2002.22412.3003.08154.10888.166.21582.24219.3291.07763.11621.1455.2373.2163.35644.0625.105.12842.207.186.31495.06445.11962.11865.24316.17627.36572.0542.11474.11133.22705.16015.34472.04883.11719.0879.23682.13038.356.04589.12744.09423.25293.13379.3833.03613.11914.0625.23975.09277.35987.03369.13281.0708.26367.09717.39892.02783.13819.04394.27783.064.41748.01709.11914.03955.23633.05127.35694q.03809.38232.03906.7666L176,120Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"144 144 168 120 144 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"45.97561\"\n      y=\"45.97561\"\n      width=\"164.04877\"\n      height=\"164.04877\"\n      rx=\"8\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M88,152v-8a24,24,0,0,1,24-24h56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"144 144 168 120 144 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"45.97561\"\n      y=\"45.97561\"\n      width=\"164.04877\"\n      height=\"164.04877\"\n      rx=\"8\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M88,152v-8a24,24,0,0,1,24-24h56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"144 144 168 120 144 96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"45.97561\"\n      y=\"45.97561\"\n      width=\"164.04877\"\n      height=\"164.04877\"\n      rx=\"8\"\n      transform=\"translate(-53.01934 128) rotate(-45)\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <path\n      d=\"M88,152v-8a24,24,0,0,1,24-24h56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TrafficSign = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTrafficSign.displayName = \"TrafficSign\";\n\nexport default TrafficSign;\n"]},"metadata":{},"sourceType":"module"}