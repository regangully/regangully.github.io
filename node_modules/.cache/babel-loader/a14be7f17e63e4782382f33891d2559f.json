{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"208\",\n    cy: \"104\",\n    r: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"48\",\n    cy: \"104\",\n    r: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"96\",\n    cy: \"56\",\n    r: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"160\",\n    cy: \"56\",\n    r: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"212\",\n    cy: \"108\",\n    r: \"20\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"44\",\n    cy: \"108\",\n    r: \"20\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"60\",\n    r: \"20\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"60\",\n    r: \"20\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"212\",\n    cy: \"108\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"44\",\n    cy: \"108\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"60\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"60\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M240,108a28,28,0,1,1-28-28A28.03146,28.03146,0,0,1,240,108ZM72,108a28,28,0,1,0-28,28A28.03146,28.03146,0,0,0,72,108ZM92,88A28,28,0,1,0,64,60,28.03146,28.03146,0,0,0,92,88Zm72,0a28,28,0,1,0-28-28A28.03146,28.03146,0,0,0,164,88Zm23.0918,60.84473a35.3317,35.3317,0,0,1-16.8418-21.124,43.99839,43.99839,0,0,0-84.5-.00439,35.2806,35.2806,0,0,1-16.7998,21.105,40.00718,40.00718,0,0,0,34.57226,72.05176,64.08634,64.08634,0,0,1,48.86524-.03711,40.0067,40.0067,0,0,0,34.7041-71.99121Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"212\",\n    cy: \"108\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"44\",\n    cy: \"108\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"60\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"60\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"212\",\n    cy: \"108\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"44\",\n    cy: \"108\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"60\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"60\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"212\",\n    cy: \"108\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"44\",\n    cy: \"108\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"60\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"60\",\n    r: \"20\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar PawPrint = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nPawPrint.displayName = \"PawPrint\";\nexport default PawPrint;","map":{"version":3,"sources":["../../src/icons/PawPrint.tsx"],"names":["pathsByWeight","d","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","opacity","renderPath","renderPathForWeight","PawPrint","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"208\" cy=\"104\" r=\"24\" />\n    <circle cx=\"48\" cy=\"104\" r=\"24\" />\n    <circle cx=\"96\" cy=\"56\" r=\"24\" />\n    <circle cx=\"160\" cy=\"56\" r=\"24\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"212\" cy=\"108\" r=\"20\" opacity=\"0.2\" />\n    <circle cx=\"44\" cy=\"108\" r=\"20\" opacity=\"0.2\" />\n    <circle cx=\"92\" cy=\"60\" r=\"20\" opacity=\"0.2\" />\n    <circle cx=\"164\" cy=\"60\" r=\"20\" opacity=\"0.2\" />\n    <path\n      d=\"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\"\n      opacity=\"0.2\"\n    />\n    <circle\n      cx=\"212\"\n      cy=\"108\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"44\"\n      cy=\"108\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"92\"\n      cy=\"60\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"164\"\n      cy=\"60\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M240,108a28,28,0,1,1-28-28A28.03146,28.03146,0,0,1,240,108ZM72,108a28,28,0,1,0-28,28A28.03146,28.03146,0,0,0,72,108ZM92,88A28,28,0,1,0,64,60,28.03146,28.03146,0,0,0,92,88Zm72,0a28,28,0,1,0-28-28A28.03146,28.03146,0,0,0,164,88Zm23.0918,60.84473a35.3317,35.3317,0,0,1-16.8418-21.124,43.99839,43.99839,0,0,0-84.5-.00439,35.2806,35.2806,0,0,1-16.7998,21.105,40.00718,40.00718,0,0,0,34.57226,72.05176,64.08634,64.08634,0,0,1,48.86524-.03711,40.0067,40.0067,0,0,0,34.7041-71.99121Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"212\"\n      cy=\"108\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle\n      cx=\"44\"\n      cy=\"108\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle\n      cx=\"92\"\n      cy=\"60\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle\n      cx=\"164\"\n      cy=\"60\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"212\"\n      cy=\"108\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle\n      cx=\"44\"\n      cy=\"108\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle\n      cx=\"92\"\n      cy=\"60\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle\n      cx=\"164\"\n      cy=\"60\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"212\"\n      cy=\"108\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"44\"\n      cy=\"108\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"92\"\n      cy=\"60\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"164\"\n      cy=\"60\"\n      r=\"20\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M183.23572,155.85352a43.541,43.541,0,0,1-20.667-25.90381l-.00092.001a35.9985,35.9985,0,0,0-69.13562,0l-.00092-.001a43.541,43.541,0,0,1-20.667,25.90381,32.00736,32.00736,0,0,0,27.72266,57.61767,72.51938,72.51938,0,0,1,55.02612,0,32.00679,32.00679,0,0,0,27.72266-57.61767Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst PawPrint = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPawPrint.displayName = \"PawPrint\";\n\nexport default PawPrint;\n"]},"metadata":{},"sourceType":"module"}