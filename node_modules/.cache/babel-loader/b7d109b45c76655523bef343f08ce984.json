{"ast":null,"code":"import { createContext } from 'react';\nvar IconContext = /*#__PURE__*/createContext({\n  color: \"currentColor\",\n  size: \"1em\",\n  weight: \"regular\",\n  mirrored: false\n});\n\nvar renderPathForWeight = function renderPathForWeight(weight, color, pathsByWeight) {\n  var path = pathsByWeight.get(weight);\n  if (!!path) return path(color);\n  console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n  return null;\n};\n\nexport { IconContext, renderPathForWeight };","map":{"version":3,"sources":["../../src/lib/index.ts"],"names":["IconContext","createContext","color","size","weight","mirrored","renderPathForWeight","path","pathsByWeight","console"],"mappings":";IAuBaA,WAAW,GAAA,aAAGC,aAAa,CAAY;AAClDC,EAAAA,KAAK,EAD6C,cAAA;AAElDC,EAAAA,IAAI,EAF8C,KAAA;AAGlDC,EAAAA,MAAM,EAH4C,SAAA;AAIlDC,EAAAA,QAAQ,EAAE;AAJwC,CAAZ,C;;IAO3BC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,MAAA,EAAA,KAAA,EAAA,aAAA,EAAA;AAKjC,MAAMC,IAAI,GAAGC,aAAa,CAAbA,GAAAA,CAAb,MAAaA,CAAb;AACA,MAAI,CAAC,CAAL,IAAA,EAAY,OAAOD,IAAI,CAAX,KAAW,CAAX;AAEZE,EAAAA,OAAO,CAAPA,KAAAA,CAAAA,gGAAAA;AAIA,SAAA,IAAA;AACD,C","sourcesContent":["import { createContext, ComponentPropsWithoutRef } from \"react\";\n\nexport type IconWeight =\n  | \"thin\"\n  | \"light\"\n  | \"regular\"\n  | \"bold\"\n  | \"fill\"\n  | \"duotone\";\n\nexport type PaintFunction = (color: string) => React.ReactNode | null;\n\nexport interface IconProps extends ComponentPropsWithoutRef<\"svg\"> {\n  color?: string;\n  size?: string | number;\n  weight?: IconWeight;\n  mirrored?: boolean;\n}\n\ntype IconComponentProps = IconProps & React.RefAttributes<SVGSVGElement>;\n\nexport type Icon = React.ForwardRefExoticComponent<IconComponentProps>;\n\nexport const IconContext = createContext<IconProps>({\n  color: \"currentColor\",\n  size: \"1em\",\n  weight: \"regular\",\n  mirrored: false,\n});\n\nexport const renderPathForWeight = (\n  weight: IconWeight,\n  color: string,\n  pathsByWeight: Map<IconWeight, PaintFunction>\n): React.ReactNode | null => {\n  const path = pathsByWeight.get(weight);\n  if (!!path) return path(color);\n\n  console.error(\n    'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n  );\n\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}