{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", {\n    opacity: \"0.1\"\n  }, React.createElement(\"rect\", {\n    x: \"0.00146\",\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  })), React.createElement(\"circle\", {\n    cx: \"128.00146\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"120.001 124 128.001 124 128.001 176 136.001 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"circle\", {\n    cx: \"126\",\n    cy: \"84\",\n    r: \"16\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", {\n    opacity: \"0.1\"\n  }, React.createElement(\"rect\", {\n    x: \"0.00244\",\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  })), React.createElement(\"circle\", {\n    cx: \"128.00244\",\n    cy: \"128\",\n    r: \"96\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"128.00244\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"120.002 120 128.002 120 128.002 176 136.002 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"126.00244\",\n    cy: \"84\",\n    r: \"12\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", {\n    opacity: \"0.1\"\n  }, React.createElement(\"rect\", {\n    x: \"0.00195\",\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  })), React.createElement(\"path\", {\n    d: \"M128.00146,23.99963a104,104,0,1,0,104,104A104.11791,104.11791,0,0,0,128.00146,23.99963ZM126.002,72a12,12,0,1,1-12,12A12,12,0,0,1,126.002,72Zm9.99951,111.99963h-8a8.0004,8.0004,0,0,1-8-8v-48a8,8,0,1,1,0-16h8a8.00039,8.00039,0,0,1,8,8v48a8,8,0,0,1,0,16Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", {\n    opacity: \"0.1\"\n  }, React.createElement(\"rect\", {\n    x: \"0.00098\",\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  })), React.createElement(\"circle\", {\n    cx: \"128.00098\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"120 120 128.001 120 128 176 136 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"126\",\n    cy: \"84\",\n    r: \"10\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", {\n    opacity: \"0.1\"\n  }, React.createElement(\"rect\", {\n    x: \"0.00049\",\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  })), React.createElement(\"circle\", {\n    cx: \"128.00049\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"120 120 128 120 128 176 136 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"126.00049\",\n    cy: \"84\",\n    r: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", {\n    opacity: \"0.1\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"120 120 128 120 128 176 136 176\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"126\",\n    cy: \"84\",\n    r: \"12\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Info = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nInfo.displayName = \"Info\";\nexport default Info;","map":{"version":3,"sources":["../../src/icons/Info.tsx"],"names":["pathsByWeight","opacity","x","width","height","fill","cx","cy","r","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","points","d","renderPath","renderPathForWeight","Info","forwardRef","ref","props"],"mappings":";;;AAAA;;AAWA,IAAMA,aAAa,GAAA,aAAG,IAAtB,GAAsB,EAAtB;AAEAA,aAAa,CAAbA,GAAAA,CAAAA,MAAAA,EAA0B,UAAA,KAAA,EAAA;AAAA,SACxB,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAGC,IAAAA,OAAO,EAAC;AAAX,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMC,IAAAA,CAAC,EAAC,SAAR;AAAkBC,IAAAA,KAAK,EAAC,KAAxB;AAA8BC,IAAAA,MAAM,EAAC,KAArC;AAA2CC,IAAAA,IAAI,EAAC;AAAhD,GAAA,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACEC,IAAAA,EAAE,EAAC,WADL;AAEEC,IAAAA,EAAE,EAAC,KAFL;AAGEC,IAAAA,CAAC,EAAC,IAHJ;AAIEH,IAAAA,IAAI,EAAC,MAJP;AAKEI,IAAAA,MAAM,EAAEC,KALV;AAMEC,IAAAA,aAAa,EAAC,OANhB;AAOEC,IAAAA,cAAc,EAAC,OAPjB;AAQEC,IAAAA,WAAW,EAAC;AARd,GAAA,CAJF,EAcE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACEC,IAAAA,MAAM,EAAC,iDADT;AAEET,IAAAA,IAAI,EAAC,MAFP;AAGEI,IAAAA,MAAM,EAAEC,KAHV;AAIEC,IAAAA,aAAa,EAAC,OAJhB;AAKEC,IAAAA,cAAc,EAAC,OALjB;AAMEC,IAAAA,WAAW,EAAC;AANd,GAAA,CAdF,EAsBE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQP,IAAAA,EAAE,EAAC,KAAX;AAAiBC,IAAAA,EAAE,EAAC,IAApB;AAAyBC,IAAAA,CAAC,EAAC;AAA3B,GAAA,CAtBF,CADwB;AAA1BR,CAAAA;AA2BAA,aAAa,CAAbA,GAAAA,CAAAA,SAAAA,EAA6B,UAAA,KAAA,EAAA;AAAA,SAC3B,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAGC,IAAAA,OAAO,EAAC;AAAX,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMC,IAAAA,CAAC,EAAC,SAAR;AAAkBC,IAAAA,KAAK,EAAC,KAAxB;AAA8BC,IAAAA,MAAM,EAAC,KAArC;AAA2CC,IAAAA,IAAI,EAAC;AAAhD,GAAA,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQC,IAAAA,EAAE,EAAC,WAAX;AAAuBC,IAAAA,EAAE,EAAC,KAA1B;AAAgCC,IAAAA,CAAC,EAAC,IAAlC;AAAuCP,IAAAA,OAAO,EAAC;AAA/C,GAAA,CAJF,EAKE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACEK,IAAAA,EAAE,EAAC,WADL;AAEEC,IAAAA,EAAE,EAAC,KAFL;AAGEC,IAAAA,CAAC,EAAC,IAHJ;AAIEH,IAAAA,IAAI,EAAC,MAJP;AAKEI,IAAAA,MAAM,EAAEC,KALV;AAMEC,IAAAA,aAAa,EAAC,OANhB;AAOEC,IAAAA,cAAc,EAAC,OAPjB;AAQEC,IAAAA,WAAW,EAAC;AARd,GAAA,CALF,EAeE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACEC,IAAAA,MAAM,EAAC,iDADT;AAEET,IAAAA,IAAI,EAAC,MAFP;AAGEI,IAAAA,MAAM,EAAEC,KAHV;AAIEC,IAAAA,aAAa,EAAC,OAJhB;AAKEC,IAAAA,cAAc,EAAC,OALjB;AAMEC,IAAAA,WAAW,EAAC;AANd,GAAA,CAfF,EAuBE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQP,IAAAA,EAAE,EAAC,WAAX;AAAuBC,IAAAA,EAAE,EAAC,IAA1B;AAA+BC,IAAAA,CAAC,EAAC;AAAjC,GAAA,CAvBF,CAD2B;AAA7BR,CAAAA;AA4BAA,aAAa,CAAbA,GAAAA,CAAAA,MAAAA,EAA0B,YAAA;AAAA,SACxB,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAGC,IAAAA,OAAO,EAAC;AAAX,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMC,IAAAA,CAAC,EAAC,SAAR;AAAkBC,IAAAA,KAAK,EAAC,KAAxB;AAA8BC,IAAAA,MAAM,EAAC,KAArC;AAA2CC,IAAAA,IAAI,EAAC;AAAhD,GAAA,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMU,IAAAA,CAAC,EAAC;AAAR,GAAA,CAJF,CADwB;AAA1Bf,CAAAA;AASAA,aAAa,CAAbA,GAAAA,CAAAA,OAAAA,EAA2B,UAAA,KAAA,EAAA;AAAA,SACzB,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAGC,IAAAA,OAAO,EAAC;AAAX,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMC,IAAAA,CAAC,EAAC,SAAR;AAAkBC,IAAAA,KAAK,EAAC,KAAxB;AAA8BC,IAAAA,MAAM,EAAC,KAArC;AAA2CC,IAAAA,IAAI,EAAC;AAAhD,GAAA,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACEC,IAAAA,EAAE,EAAC,WADL;AAEEC,IAAAA,EAAE,EAAC,KAFL;AAGEC,IAAAA,CAAC,EAAC,IAHJ;AAIEH,IAAAA,IAAI,EAAC,MAJP;AAKEI,IAAAA,MAAM,EAAEC,KALV;AAMEC,IAAAA,aAAa,EAAC,OANhB;AAOEC,IAAAA,cAAc,EAAC,OAPjB;AAQEC,IAAAA,WAAW,EAAC;AARd,GAAA,CAJF,EAcE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACEC,IAAAA,MAAM,EAAC,qCADT;AAEET,IAAAA,IAAI,EAAC,MAFP;AAGEI,IAAAA,MAAM,EAAEC,KAHV;AAIEC,IAAAA,aAAa,EAAC,OAJhB;AAKEC,IAAAA,cAAc,EAAC,OALjB;AAMEC,IAAAA,WAAW,EAAC;AANd,GAAA,CAdF,EAsBE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQP,IAAAA,EAAE,EAAC,KAAX;AAAiBC,IAAAA,EAAE,EAAC,IAApB;AAAyBC,IAAAA,CAAC,EAAC;AAA3B,GAAA,CAtBF,CADyB;AAA3BR,CAAAA;AA2BAA,aAAa,CAAbA,GAAAA,CAAAA,MAAAA,EAA0B,UAAA,KAAA,EAAA;AAAA,SACxB,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAGC,IAAAA,OAAO,EAAC;AAAX,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMC,IAAAA,CAAC,EAAC,SAAR;AAAkBC,IAAAA,KAAK,EAAC,KAAxB;AAA8BC,IAAAA,MAAM,EAAC,KAArC;AAA2CC,IAAAA,IAAI,EAAC;AAAhD,GAAA,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACEC,IAAAA,EAAE,EAAC,WADL;AAEEC,IAAAA,EAAE,EAAC,KAFL;AAGEC,IAAAA,CAAC,EAAC,IAHJ;AAIEH,IAAAA,IAAI,EAAC,MAJP;AAKEI,IAAAA,MAAM,EAAEC,KALV;AAMEC,IAAAA,aAAa,EAAC,OANhB;AAOEC,IAAAA,cAAc,EAAC,OAPjB;AAQEC,IAAAA,WAAW,EAAC;AARd,GAAA,CAJF,EAcE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACEC,IAAAA,MAAM,EAAC,iCADT;AAEET,IAAAA,IAAI,EAAC,MAFP;AAGEI,IAAAA,MAAM,EAAEC,KAHV;AAIEC,IAAAA,aAAa,EAAC,OAJhB;AAKEC,IAAAA,cAAc,EAAC,OALjB;AAMEC,IAAAA,WAAW,EAAC;AANd,GAAA,CAdF,EAsBE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQP,IAAAA,EAAE,EAAC,WAAX;AAAuBC,IAAAA,EAAE,EAAC,IAA1B;AAA+BC,IAAAA,CAAC,EAAC;AAAjC,GAAA,CAtBF,CADwB;AAA1BR,CAAAA;AA2BAA,aAAa,CAAbA,GAAAA,CAAAA,SAAAA,EAA6B,UAAA,KAAA,EAAA;AAAA,SAC3B,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAGC,IAAAA,OAAO,EAAC;AAAX,GAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACEK,IAAAA,EAAE,EAAC,KADL;AAEEC,IAAAA,EAAE,EAAC,KAFL;AAGEC,IAAAA,CAAC,EAAC,IAHJ;AAIEH,IAAAA,IAAI,EAAC,MAJP;AAKEI,IAAAA,MAAM,EAAEC,KALV;AAMEC,IAAAA,aAAa,EAAC,OANhB;AAOEC,IAAAA,cAAc,EAAC,OAPjB;AAQEC,IAAAA,WAAW,EAAC;AARd,GAAA,CAFF,EAYE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACEC,IAAAA,MAAM,EAAC,iCADT;AAEET,IAAAA,IAAI,EAAC,MAFP;AAGEI,IAAAA,MAAM,EAAEC,KAHV;AAIEC,IAAAA,aAAa,EAAC,OAJhB;AAKEC,IAAAA,cAAc,EAAC,OALjB;AAMEC,IAAAA,WAAW,EAAC;AANd,GAAA,CAZF,EAoBE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQP,IAAAA,EAAE,EAAC,KAAX;AAAiBC,IAAAA,EAAE,EAAC,IAApB;AAAyBC,IAAAA,CAAC,EAAC;AAA3B,GAAA,CApBF,CAD2B;AAA7BR,CAAAA;;AAyBA,IAAMgB,UAAU,GAAmB,SAA7BA,UAA6B,CAAA,MAAA,EAAA,KAAA,EAAA;AAAA,SACjCC,mBAAmB,CAAA,MAAA,EAAA,KAAA,EADc,aACd,CADc;AAAnC,CAAA;;AAGA,IAAMC,IAAI,GAAA,aAAGC,UAAU,CAA2B,UAAA,KAAA,EAAA,GAAA,EAAA;AAAA,SAChD,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAUC,IAAAA,GAAG,EAAEA;AAAf,GAAA,EAAwBC,KAAxB,EAAwBA;AAAOL,IAAAA,UAAU,EAAEA;AAAnBK,GAAxB,CAAA,CADgD;AAAlD,CAAuB,CAAvB;AAIAH,IAAI,CAAJA,WAAAA,GAAAA,MAAAA","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <g opacity=\"0.1\">\n      <rect x=\"0.00146\" width=\"256\" height=\"256\" fill=\"none\" />\n    </g>\n    <circle\n      cx=\"128.00146\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"120.001 124 128.001 124 128.001 176 136.001 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <g opacity=\"0.1\">\n      <rect x=\"0.00244\" width=\"256\" height=\"256\" fill=\"none\" />\n    </g>\n    <circle cx=\"128.00244\" cy=\"128\" r=\"96\" opacity=\"0.2\" />\n    <circle\n      cx=\"128.00244\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"120.002 120 128.002 120 128.002 176 136.002 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"126.00244\" cy=\"84\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g opacity=\"0.1\">\n      <rect x=\"0.00195\" width=\"256\" height=\"256\" fill=\"none\" />\n    </g>\n    <path d=\"M128.00146,23.99963a104,104,0,1,0,104,104A104.11791,104.11791,0,0,0,128.00146,23.99963ZM126.002,72a12,12,0,1,1-12,12A12,12,0,0,1,126.002,72Zm9.99951,111.99963h-8a8.0004,8.0004,0,0,1-8-8v-48a8,8,0,1,1,0-16h8a8.00039,8.00039,0,0,1,8,8v48a8,8,0,0,1,0,16Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <g opacity=\"0.1\">\n      <rect x=\"0.00098\" width=\"256\" height=\"256\" fill=\"none\" />\n    </g>\n    <circle\n      cx=\"128.00098\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"120 120 128.001 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <g opacity=\"0.1\">\n      <rect x=\"0.00049\" width=\"256\" height=\"256\" fill=\"none\" />\n    </g>\n    <circle\n      cx=\"128.00049\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"126.00049\" cy=\"84\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <g opacity=\"0.1\"></g>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Info = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nInfo.displayName = \"Info\";\n\nexport default Info;\n"]},"metadata":{},"sourceType":"module"}