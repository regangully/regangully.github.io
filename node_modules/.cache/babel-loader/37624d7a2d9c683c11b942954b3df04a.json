{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"176\",\n    height: \"176\",\n    rx: \"24\",\n    strokeWidth: \"24\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"88\",\n    cy: \"88\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"168\",\n    cy: \"88\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"88\",\n    cy: \"168\",\n    r: \"16\"\n  }), React.createElement(\"circle\", {\n    cx: \"168\",\n    cy: \"168\",\n    r: \"16\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"176\",\n    height: \"176\",\n    rx: \"24\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"176\",\n    height: \"176\",\n    rx: \"24\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"92\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"92\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"164\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"164\",\n    r: \"12\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M192,32H64A32.03667,32.03667,0,0,0,32,64V192a32.03667,32.03667,0,0,0,32,32H192a32.03667,32.03667,0,0,0,32-32V64A32.03667,32.03667,0,0,0,192,32ZM92,176a12,12,0,1,1,12-12A12,12,0,0,1,92,176Zm0-72a12,12,0,1,1,12-12A12,12,0,0,1,92,104Zm36,36a12,12,0,1,1,12-12A12,12,0,0,1,128,140Zm36,36a12,12,0,1,1,12-12A12,12,0,0,1,164,176Zm0-72a12,12,0,1,1,12-12A12,12,0,0,1,164,104Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"176\",\n    height: \"176\",\n    rx: \"24\",\n    strokeWidth: \"12\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"92\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"92\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"164\",\n    r: \"10\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"164\",\n    r: \"10\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"176\",\n    height: \"176\",\n    rx: \"24\",\n    strokeWidth: \"8\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"92\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"92\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"164\",\n    r: \"8\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"164\",\n    r: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"40\",\n    width: \"176\",\n    height: \"176\",\n    rx: \"24\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"92\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"92\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"92\",\n    cy: \"164\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"12\"\n  }), React.createElement(\"circle\", {\n    cx: \"164\",\n    cy: \"164\",\n    r: \"12\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar DiceFive = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nDiceFive.displayName = \"DiceFive\";\nexport default DiceFive;","map":{"version":3,"sources":["../../src/icons/DiceFive.tsx"],"names":["pathsByWeight","x","y","width","height","rx","strokeWidth","stroke","color","strokeLinecap","strokeLinejoin","fill","cx","cy","r","opacity","d","renderPath","renderPathForWeight","DiceFive","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"176\"\n      height=\"176\"\n      rx=\"24\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"88\" cy=\"88\" r=\"16\" />\n    <circle cx=\"128\" cy=\"128\" r=\"16\" />\n    <circle cx=\"168\" cy=\"88\" r=\"16\" />\n    <circle cx=\"88\" cy=\"168\" r=\"16\" />\n    <circle cx=\"168\" cy=\"168\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect x=\"40\" y=\"40\" width=\"176\" height=\"176\" rx=\"24\" opacity=\"0.2\" />\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"176\"\n      height=\"176\"\n      rx=\"24\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"92\" cy=\"92\" r=\"12\" />\n    <circle cx=\"164\" cy=\"92\" r=\"12\" />\n    <circle cx=\"92\" cy=\"164\" r=\"12\" />\n    <circle cx=\"128\" cy=\"128\" r=\"12\" />\n    <circle cx=\"164\" cy=\"164\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M192,32H64A32.03667,32.03667,0,0,0,32,64V192a32.03667,32.03667,0,0,0,32,32H192a32.03667,32.03667,0,0,0,32-32V64A32.03667,32.03667,0,0,0,192,32ZM92,176a12,12,0,1,1,12-12A12,12,0,0,1,92,176Zm0-72a12,12,0,1,1,12-12A12,12,0,0,1,92,104Zm36,36a12,12,0,1,1,12-12A12,12,0,0,1,128,140Zm36,36a12,12,0,1,1,12-12A12,12,0,0,1,164,176Zm0-72a12,12,0,1,1,12-12A12,12,0,0,1,164,104Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"176\"\n      height=\"176\"\n      rx=\"24\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"92\" cy=\"92\" r=\"10\" />\n    <circle cx=\"128\" cy=\"128\" r=\"10\" />\n    <circle cx=\"164\" cy=\"92\" r=\"10\" />\n    <circle cx=\"92\" cy=\"164\" r=\"10\" />\n    <circle cx=\"164\" cy=\"164\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"176\"\n      height=\"176\"\n      rx=\"24\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"92\" cy=\"92\" r=\"8\" />\n    <circle cx=\"128\" cy=\"128\" r=\"8\" />\n    <circle cx=\"164\" cy=\"92\" r=\"8\" />\n    <circle cx=\"92\" cy=\"164\" r=\"8\" />\n    <circle cx=\"164\" cy=\"164\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"40\"\n      width=\"176\"\n      height=\"176\"\n      rx=\"24\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <circle cx=\"92\" cy=\"92\" r=\"12\" />\n    <circle cx=\"164\" cy=\"92\" r=\"12\" />\n    <circle cx=\"92\" cy=\"164\" r=\"12\" />\n    <circle cx=\"128\" cy=\"128\" r=\"12\" />\n    <circle cx=\"164\" cy=\"164\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst DiceFive = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nDiceFive.displayName = \"DiceFive\";\n\nexport default DiceFive;\n"]},"metadata":{},"sourceType":"module"}