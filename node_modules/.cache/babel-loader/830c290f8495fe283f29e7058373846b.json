{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n/* GENERATED FILE */\n\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"104\",\n    x2: \"128\",\n    y2: \"56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"152\",\n    x2: \"80\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"152\",\n    x2: \"176\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"200\",\n    x2: \"128\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"152\",\n    x2: \"224\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"144\",\n    strokeWidth: \"24\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"96\",\n    height: \"48\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"128\",\n    y: \"152\",\n    width: \"96\",\n    height: \"48\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"176\",\n    y: \"104\",\n    width: \"48\",\n    height: \"48\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"104\",\n    x2: \"128\",\n    y2: \"56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"152\",\n    x2: \"80\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"152\",\n    x2: \"176\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"200\",\n    x2: \"128\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"152\",\n    x2: \"224\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"144\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n    d: \"M136,92h96V56a8.00008,8.00008,0,0,0-8-8H136Z\"\n  }), React.createElement(\"rect\", {\n    x: \"184\",\n    y: \"108\",\n    width: \"48\",\n    height: \"44\"\n  }), React.createElement(\"rect\", {\n    x: \"88\",\n    y: \"108\",\n    width: \"80\",\n    height: \"44\"\n  }), React.createElement(\"rect\", {\n    x: \"24\",\n    y: \"108\",\n    width: \"48\",\n    height: \"44\"\n  }), React.createElement(\"path\", {\n    d: \"M136,168v40h88a8.00008,8.00008,0,0,0,8-8V168Z\"\n  }), React.createElement(\"path\", {\n    d: \"M120,92V48H32a8.00008,8.00008,0,0,0-8,8V92Z\"\n  }), React.createElement(\"path\", {\n    d: \"M120,168H24v32a8.00008,8.00008,0,0,0,8,8h88Z\"\n  })));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"104\",\n    x2: \"128\",\n    y2: \"56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"152\",\n    x2: \"80\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"152\",\n    x2: \"176\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"200\",\n    x2: \"128\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"152\",\n    x2: \"224\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"144\",\n    strokeWidth: \"12\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"104\",\n    x2: \"128\",\n    y2: \"56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"152\",\n    x2: \"80\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"152\",\n    x2: \"176\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"200\",\n    x2: \"128\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"152\",\n    x2: \"224\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"144\",\n    strokeWidth: \"8\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"104\",\n    x2: \"128\",\n    y2: \"56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"80\",\n    y1: \"152\",\n    x2: \"80\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"176\",\n    y1: \"152\",\n    x2: \"176\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"200\",\n    x2: \"128\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"152\",\n    x2: \"224\",\n    y2: \"152\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"56\",\n    width: \"192\",\n    height: \"144\",\n    strokeWidth: \"16\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Wall = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nWall.displayName = \"Wall\";\nexport default Wall;","map":{"version":3,"sources":["../../src/icons/Wall.tsx"],"names":["pathsByWeight","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","x","y","width","height","opacity","d","renderPath","renderPathForWeight","Wall","forwardRef","ref","props"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"104\"\n      x2=\"128\"\n      y2=\"56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"152\"\n      x2=\"80\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"152\"\n      x2=\"176\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"200\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"152\"\n      x2=\"224\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"144\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect x=\"32\" y=\"56\" width=\"96\" height=\"48\" opacity=\"0.2\" />\n    <rect x=\"128\" y=\"152\" width=\"96\" height=\"48\" opacity=\"0.2\" />\n    <rect x=\"176\" y=\"104\" width=\"48\" height=\"48\" opacity=\"0.2\" />\n    <line\n      x1=\"128\"\n      y1=\"104\"\n      x2=\"128\"\n      y2=\"56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"152\"\n      x2=\"80\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"152\"\n      x2=\"176\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"200\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"152\"\n      x2=\"224\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"144\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g>\n      <path d=\"M136,92h96V56a8.00008,8.00008,0,0,0-8-8H136Z\" />\n      <rect x=\"184\" y=\"108\" width=\"48\" height=\"44\" />\n      <rect x=\"88\" y=\"108\" width=\"80\" height=\"44\" />\n      <rect x=\"24\" y=\"108\" width=\"48\" height=\"44\" />\n      <path d=\"M136,168v40h88a8.00008,8.00008,0,0,0,8-8V168Z\" />\n      <path d=\"M120,92V48H32a8.00008,8.00008,0,0,0-8,8V92Z\" />\n      <path d=\"M120,168H24v32a8.00008,8.00008,0,0,0,8,8h88Z\" />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"104\"\n      x2=\"128\"\n      y2=\"56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"152\"\n      x2=\"80\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"152\"\n      x2=\"176\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"200\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"152\"\n      x2=\"224\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"144\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"104\"\n      x2=\"128\"\n      y2=\"56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"152\"\n      x2=\"80\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"152\"\n      x2=\"176\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"200\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"152\"\n      x2=\"224\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"144\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"128\"\n      y1=\"104\"\n      x2=\"128\"\n      y2=\"56\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"80\"\n      y1=\"152\"\n      x2=\"80\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"176\"\n      y1=\"152\"\n      x2=\"176\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"200\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"152\"\n      x2=\"224\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"32\"\n      y=\"56\"\n      width=\"192\"\n      height=\"144\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Wall = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nWall.displayName = \"Wall\";\n\nexport default Wall;\n"]},"metadata":{},"sourceType":"module"}